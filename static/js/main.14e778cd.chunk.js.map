{"version":3,"sources":["components/GoogleContainer.js","components/Navigation.js","Copyright.js","components/d3color-legend.js","components/WorldChoropleth.js","components/Dashboard.js","components/FlipboardContainer.js","components/PieChart.js","components/DonutChart.js","components/PieCharts.js","components/TwitterContainer.js","components/BarChart.js","components/BarCharts.js","components/TableChart.js","components/GoogleNewsfeed.js","components/TableCharts.js","components/LineChart.js","components/LineCharts.js","components/RaceChart.js","components/RaceCharts.js","components/DonutCharts.js","components/MultiLineChart.js","components/MultiLineCharts.js","App.js","serviceWorker.js","index.js"],"names":["GoogleContainer","useEffect","elem","document","createElement","src","async","defer","body","insertBefore","firstChild","installGoogleAds","window","adsbygoogle","push","className","style","display","data-adtest","data-ad-client","data-ad-slot","data-ad-format","useStyles","makeStyles","theme","root","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","spacing","breakpoints","up","appBarSpacer","Navigation","props","classes","CssBaseline","AppBar","clsx","Toolbar","IconButton","edge","color","aria-label","Typography","component","variant","noWrap","Badge","badgeContent","Drawer","paper","Divider","List","ListItem","button","ListItemIcon","to","ListItemText","primary","Copyright","align","Link","href","Date","getFullYear","ramp","n","canvas","context","getContext","i","fillStyle","fillRect","WorldChoropleth","drawChoropleth","bind","state","covid","this","node","pdata","covid19","innerWidth","height","innerHeight","margin","projection","d3","path","length","confirmed","world","total","data","reduce","r","o","key","get","Value","set","Map","countries","topojson","objects","domain","range","x","xcor","ycor","tickSize","marginTop","marginBottom","ticks","tickFormat","tickValues","svg","append","attr","tickAdjust","g","selectAll","interpolate","Math","min","copy","rangeRound","toDataURL","interpolator","Object","assign","undefined","round","map","invertExtent","thresholds","quantiles","thresholdFormat","d","join","max","bandwidth","call","select","remove","text","legend","URL","location","features","properties","name","has","toLocaleString","datum","a","b","ref","Component","content","overflow","container","paddingLeft","paddingTop","paddingBottom","container_spacing","flexDirection","fixedHeight","Dashboard","fixedHeightPaper","useState","setCovid19","parsedate","yesterday","Promise","all","then","filter","result","total_confirmed","tot","row","total_deaths","total_recovered","covid19data","setDate","getDate","Container","maxWidth","Grid","item","xs","md","lg","Paper","id","source","scrolling","frameBorder","allow","Box","pt","FlipboardContainer","script","getElementsByClassName","appendChild","DonutChart","useRef","pvalue","value","deaths","recovered","loc","pconfirmed","pdeaths","precovered","foundlocation","find","itmInner","founddeaths","foundrecovered","recover","Region","Subregion","Deaths","Recovered","continent","values","current","t","reverse","pie","sort","arc","innerRadius","outerRadius","arcs","centroid","endAngle","startAngle","console","log","radius","on","formControl","minWidth","selectEmpty","Historical","valueby","setValue","valued","setValued","FormControl","InputLabel","Select","labelId","onChange","event","target","MenuItem","FormHelperText","justify","elevation","data-flip-widget","TwitterContainer","BarChart","temp","country","slice","y","nice","xAxis","scale","yAxis","format","trans1","exit","delay","ease","BarCharts","prevValue","usePreviousValue","e","useStyles1","flexShrink","TablePaginationActions","useTheme","count","page","rowsPerPage","onChangePage","onClick","disabled","direction","ceil","useStyles2","table","TableChart","React","setPage","setRowsPerPage","emptyRows","TableContainer","Table","TableBody","TableRow","backgroundColor","TableCell","toFixed","colSpan","TableFooter","TablePagination","rowsPerPageOptions","label","SelectProps","inputProps","native","newPage","onChangeRowsPerPage","parseInt","ActionsComponent","GoogleNewsFeed","parser","DOMParser","fetch","proxyurl","newsfeed","newsfeedbody","newsfeeddom","parseFromString","newsfeeditem","getElementsByTagName","layout","Array","from","setState","textContent","Card","CardContent","gutterBottom","CardActions","Button","size","open","withStyles","fontSize","TableCharts","GoogleNewsfeed","LineChart","bisectDate","date","left","formatValue","line","focus","classed","x0","invert","d0","d1","LineCharts","Set","itm","allowFullScreen","BarChartRace","barPadding","el","period","rank","colour","random","periodSlice","forEach","periodText","enter","ticker","bars","labels","valueLabels","replace","top_n","tween","stop","RaceCharts","DonutCharts","MultiLineChart","dates","keys","series","defined","isNaN","tickSizeOuter","clone","moved","entered","dot","preventDefault","mouse","xm","ym","i1","i0","s","abs","raise","MultiLineCharts","App","exact","render","Boolean","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.14e778cd.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\n\r\nconst GoogleContainer = () => {\r\n\r\n    useEffect(() => {\r\n        const installGoogleAds = () => {\r\n            const elem = document.createElement(\"script\");\r\n            elem.src = \"//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\";\r\n            elem.async = true;\r\n            elem.defer = true;\r\n            document.body.insertBefore(elem, document.body.firstChild);\r\n        };\r\n        installGoogleAds();\r\n        (window.adsbygoogle = window.adsbygoogle || []).push({});\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div className='ad'>\r\n            <ins className='adsbygoogle'\r\n                style={{ display: 'block' }}\r\n                data-adtest='on'\r\n                data-ad-client='ca-pub-3808734120638981'\r\n                data-ad-slot='0000000000'\r\n                data-ad-format='auto' />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GoogleContainer;","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport PieChartIcon from '@material-ui/icons/PieChart';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\nimport TableChartIcon from '@material-ui/icons/TableChart';\r\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\r\nimport FormatLineSpacingIcon from '@material-ui/icons/FormatLineSpacing';\r\n//import MultilineChartIcon from '@material-ui/icons/MultilineChart';\r\n\r\nconst drawerWidth = 55;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(7),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n}));\r\n\r\n\r\n\r\nexport default function Navigation(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            className={clsx(classes.menuButton, classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n            Covid-19 Dashboard\r\n          </Typography>\r\n          <IconButton color=\"inherit\">\r\n            <Badge badgeContent={0} color=\"secondary\">\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, classes.drawerPaperClose),\r\n        }}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <Link to='/Dashboard'><DashboardIcon /></Link>\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Dashboard\" />\r\n          </ListItem>\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <Link to='/PieCharts'><PieChartIcon /></Link>\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"PieCharts\" />\r\n          </ListItem>\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <Link to=\"/BarCharts\"><BarChartIcon /></Link>\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"BarCharts\" />\r\n          </ListItem>\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <Link to='/TableCharts'><TableChartIcon /></Link>\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"TableCharts\" />\r\n          </ListItem>\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <Link to='/LineCharts'><TrendingUpIcon /></Link>\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"LineCharts\" />\r\n          </ListItem>\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <Link to='/RaceCharts'><FormatLineSpacingIcon /></Link>\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"RaceCharts\" />\r\n          </ListItem>\r\n          {/* <ListItem button>\r\n            <ListItemIcon>\r\n              <Link to='/MultiLineCharts'><MultilineChartIcon /></Link>\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"MultiLineCharts\" />\r\n          </ListItem>           */}\r\n          {/* <ListItem button>\r\n            <ListItemIcon>\r\n              <Link to='/Temps'><FormatLineSpacingIcon /></Link>\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Temps\" />\r\n          </ListItem>           */}\r\n        </List>\r\n      </Drawer>\r\n    </div >\r\n  )\r\n}","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\n\r\n\r\nexport default function Copyright() {\r\n    return (\r\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n        {'Copyright © '}\r\n        <Link color=\"inherit\" href=\"https://itisit.com/\">\r\n          It is IT\r\n        </Link>{' '}\r\n        {new Date().getFullYear()}\r\n        {'.'}\r\n      </Typography>\r\n    );\r\n  }","import * as d3 from 'd3'\r\n\r\nexport default function legend({\r\n    node,\r\n    xcor,\r\n    ycor,\r\n    color,\r\n    title,\r\n    tickSize = 6,\r\n    width = 320, \r\n    height = 44 + tickSize,\r\n    marginTop = 18,\r\n    marginRight = 0,\r\n    marginBottom = 16 + tickSize,\r\n    marginLeft = 0,\r\n    ticks = width / 64,\r\n    tickFormat,\r\n    tickValues\r\n} = {}) {\r\n\r\n    const svg = d3.select(node)\r\n        .append(\"svg\")\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height)\r\n        .attr(\"viewBox\", [xcor, ycor, width, height])\r\n        .style(\"overflow\", \"visible\")\r\n        .style(\"display\", \"block\")\r\n\r\n    let tickAdjust = g => g.selectAll(\".tick line\").attr(\"y1\", marginTop + marginBottom - height)\r\n    let x\r\n\r\n    // Continuous\r\n    if (color.interpolate) {\r\n        const n = Math.min(color.domain().length, color.range().length)\r\n\r\n        x = color.copy().rangeRound(d3.quantize(d3.interpolate(marginLeft, width - marginRight), n))\r\n\r\n        svg.append(\"image\")        \r\n            .attr(\"x\", marginLeft)\r\n            .attr(\"y\", marginTop)\r\n            .attr(\"width\", width - marginLeft - marginRight)\r\n            .attr(\"height\", height - marginTop - marginBottom)\r\n            .attr(\"preserveAspectRatio\", \"none\")\r\n            .attr(\"xlink:href\", ramp(color.copy().domain(d3.quantize(d3.interpolate(0, 1), n))).toDataURL())\r\n    }\r\n\r\n    // Sequential\r\n    else if (color.interpolator) {\r\n        x = Object.assign(color.copy()\r\n            .interpolator(d3.interpolateRound(marginLeft, width - marginRight)),\r\n            { range() { return [marginLeft, width - marginRight] } })\r\n\r\n        svg.append(\"image\")        \r\n            .attr(\"x\", marginLeft)\r\n            .attr(\"y\", marginTop)\r\n            .attr(\"width\", width - marginLeft - marginRight)\r\n            .attr(\"height\", height - marginTop - marginBottom)\r\n            .attr(\"preserveAspectRatio\", \"none\")\r\n            .attr(\"xlink:href\", ramp(color.interpolator()).toDataURL())\r\n\r\n        // scaleSequentialQuantile doesn’t implement ticks or tickFormat.\r\n        if (!x.ticks) {\r\n            if (tickValues === undefined) {\r\n                const n = Math.round(ticks + 1)\r\n                tickValues = d3.range(n).map(i => d3.quantile(color.domain(), i / (n - 1)))\r\n            }\r\n            if (typeof tickFormat !== \"function\") {\r\n                tickFormat = d3.format(tickFormat === undefined ? \",f\" : tickFormat)\r\n            }\r\n        }\r\n    }\r\n\r\n    // Threshold\r\n    else if (color.invertExtent) {\r\n        const thresholds\r\n            = color.thresholds ? color.thresholds() // scaleQuantize\r\n                : color.quantiles ? color.quantiles() // scaleQuantile\r\n                    : color.domain() // scaleThreshold\r\n\r\n        const thresholdFormat\r\n            = tickFormat === undefined ? d => d\r\n                : typeof tickFormat === \"string\" ? d3.format(tickFormat)\r\n                    : tickFormat\r\n\r\n        x = d3.scaleLinear()\r\n            .domain([-1, color.range().length - 1])\r\n            .rangeRound([marginLeft, width - marginRight])\r\n\r\n        svg.append(\"g\")\r\n            .selectAll(\"rect\")\r\n            .data(color.range())\r\n            .join(\"rect\")\r\n            .attr(\"x\", (d, i) => x(i - 1))\r\n            .attr(\"y\", marginTop)\r\n            .attr(\"width\", (d, i) => x(i) - x(i - 1))\r\n            .attr(\"height\", height - marginTop - marginBottom)\r\n            .attr(\"fill\", d => d)\r\n\r\n        tickValues = d3.range(thresholds.length)\r\n        tickFormat = i => thresholdFormat(thresholds[i], i)\r\n    }\r\n\r\n    // Ordinal\r\n    else {\r\n        x = d3.scaleBand()\r\n            .domain(color.domain())\r\n            .rangeRound([marginLeft, width - marginRight])\r\n\r\n        svg.append(\"g\")\r\n            .selectAll(\"rect\")\r\n            .data(color.domain())\r\n            .join(\"rect\")\r\n            .attr(\"x\", x)\r\n            .attr(\"y\", marginTop)\r\n            .attr(\"width\", Math.max(0, x.bandwidth() - 1))\r\n            .attr(\"height\", height - marginTop - marginBottom)\r\n            .attr(\"fill\", color)\r\n\r\n        tickAdjust = () => { }\r\n    }\r\n\r\n    svg.append(\"g\")\r\n        .attr(\"transform\", `translate(0,${height - marginBottom})`)\r\n        .call(d3.axisBottom(x)\r\n            .ticks(ticks, typeof tickFormat === \"string\" ? tickFormat : undefined)\r\n            .tickFormat(typeof tickFormat === \"function\" ? tickFormat : undefined)\r\n            .tickSize(tickSize)\r\n            .tickValues(tickValues))\r\n        .call(tickAdjust)\r\n        .call(g => g.select(\".domain\").remove())\r\n        .call(g => g.append(\"text\")\r\n            .attr(\"x\", marginLeft)\r\n            .attr(\"y\", marginTop + marginBottom - height - 6)\r\n            .attr(\"fill\", \"currentColor\")\r\n            .attr(\"text-anchor\", \"start\")\r\n            .attr(\"font-weight\", \"bold\")\r\n            .text(title))\r\n\r\n    return svg.node()\r\n}\r\n\r\nfunction ramp(color, n = 256) {\r\n    const canvas = document.createElement('canvas')\r\n    const context = canvas.getContext(\"2d\")\r\n    for (let i = 0; i < n; ++i) {\r\n        context.fillStyle = color(i / (n - 1))\r\n        context.fillRect(i, 0, 1, 1)\r\n    }\r\n    return canvas\r\n}","import React, { Component } from 'react';\r\nimport * as d3 from 'd3';\r\nimport * as topojson from 'topojson';\r\nimport legend from './d3color-legend';\r\n\r\n\r\nclass WorldChoropleth extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.drawChoropleth = this.drawChoropleth.bind(this);\r\n        this.state = {\r\n            covid: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.drawChoropleth();\r\n    }\r\n\r\n    drawChoropleth() {\r\n        const node = this.node;\r\n        const pdata = this.props.covid19;\r\n        const width = window.innerWidth;\r\n        const height = window.innerHeight;\r\n        const margin = { top: 55, right: 200, bottom: 55, left: 200 };        \r\n        //const outline = ({ type: \"Sphere\" })\r\n        const projection = d3.geoEqualEarth();\r\n        const path = d3.geoPath(projection);\r\n\r\n        if (pdata.length > 0) {\r\n            const confirmed = pdata[0];\r\n            const world = pdata[3];\r\n            let total = 0;\r\n\r\n            const data = confirmed.reduce((r, o) => {\r\n                const key = o['Country/Region'];\r\n                r.get(key) ? total += o.Value : total = o.Value;\r\n                return r.set(key, total);\r\n            }, new Map())\r\n\r\n            const countries = topojson.feature(world, (world.objects.countries));\r\n\r\n            const color = d3.scaleThreshold()\r\n                .domain([100, 500, 1000, 5000, 10000, 50000, 100000, 500000, 1000000])\r\n                .range(['rgb(222,235,247)', 'rgb(198,219,239)', 'rgb(158,202,225)',\r\n                    'rgb(107,174,214)', 'rgb(88,164,209)', 'rgb(66,146,198)', 'rgb(33,113,181)',\r\n                    'rgb(8,81,156)', 'rgb(8,48,107)']);\r\n\r\n            legend({\r\n                node: node,\r\n                xcor: -10,\r\n                ycor: -475,\r\n                color: d3.scaleThreshold([100, 500, 1000, 5000, 10000, 50000, 100000, 500000, 1000000],\r\n                    ['rgb(222,235,247)', 'rgb(198,219,239)', 'rgb(158,202,225)',\r\n                        'rgb(107,174,214)', 'rgb(88,164,209)', 'rgb(66,146,198)', 'rgb(33,113,181)',\r\n                        'rgb(8,81,156)', 'rgb(8,48,107)']),\r\n                title: \"Total\",\r\n                tickSize: 0,\r\n                width: 450\r\n            });\r\n\r\n            const svg = d3.select(node)\r\n                .style(\"display\", \"block\")\r\n                .attr(\"viewBox\", [0, 0, width - margin.left - margin.right, height - margin.top - margin.bottom]);\r\n\r\n            const g = svg.append(\"g\")\r\n                .attr(\"clip-path\", `url(${new URL(\"#clip\", window.location)})`);\r\n\r\n            // g.append(\"use\")\r\n            //     .attr(\"xlink:href\", new URL(\"#outline\", window.location))\r\n            //     .attr(\"fill\", \"white\");\r\n\r\n            g.append(\"g\")\r\n                .selectAll(\"path\")\r\n                .data(countries.features)\r\n                .join(\"path\")\r\n                .attr(\"fill\", (d) => color(data.get(d.properties.name)))\r\n                .attr(\"d\", path)\r\n                .append(\"title\")\r\n                .text(d =>\r\n                    `Country: ${d.properties.name} \\nTotal: ${data.has(d.properties.name) ? data.get(d.properties.name).toLocaleString() : \"N/A\"}`\r\n                );\r\n\r\n            g.append(\"path\")\r\n                .datum(topojson.mesh(world, world.objects.countries, (a, b) => a !== b))\r\n                .attr(\"fill\", \"none\")\r\n                .attr(\"stroke\", \"white\")\r\n                .attr(\"stroke-linejoin\", \"round\")\r\n                .attr(\"d\", path);\r\n\r\n           svg.append(\"text\")\r\n                .attr(\"class\", \"caption\")\r\n                .attr(\"x\", width - margin.left - margin.right - 200)\r\n                .attr(\"y\", height - margin.top - margin.bottom - 25)\r\n                .attr(\"font-size\", 12)\r\n                .text(\"*Source: data.humdata.org\");\r\n\r\n            // svg.append(\"use\")\r\n            //     .attr(\"xlink:href\", new URL(\"#outline\", window.location))\r\n            //     .attr(\"fill\", \"none\")\r\n            //     .attr(\"stroke\", \"black\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        this.drawChoropleth()\r\n        return <svg ref={node => { this.node = node }} />\r\n    }\r\n}\r\n\r\nexport default WorldChoropleth","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\n\r\nimport * as d3 from 'd3';\r\nimport GoogleContainer from './GoogleContainer';\r\n\r\nimport Navigation from './Navigation';\r\nimport Copyright from '../Copyright';\r\nimport WorldChoropleth from './WorldChoropleth';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    container: {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingTop: theme.spacing(2),\r\n        paddingBottom: theme.spacing(2),\r\n        paddingRight: theme.spacing(2),\r\n    },\r\n    container_spacing: {\r\n        spacing: 3,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n    },\r\n    fixedHeight: {\r\n        height: 550,\r\n    },\r\n}));\r\n\r\n\r\nexport default function Dashboard(props) {\r\n    const classes = useStyles();\r\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n    const [covid19, setCovid19] = useState([])\r\n\r\n    const covid19data = (props) => {\r\n        const covid19confirmed = \"time_series_covid19_confirmed_global_narrow.csv\"\r\n        const covid19deaths = \"time_series_covid19_deaths_global_narrow.csv\"\r\n        const covid19recovered = \"time_series_covid19_recovered_global_narrow.csv\"\r\n        const mapurl = \"countries-50m.json\"\r\n        const parsedate = d3.timeFormat(\"%Y-%m-%d\")\r\n        const data = Promise.all([\r\n            d3.csv(covid19confirmed, d3.autoType).then((data) =>\r\n                data.filter((d) => parsedate(d.Date) === props.yesterday)),\r\n            d3.csv(covid19deaths, d3.autoType).then((data) =>\r\n                data.filter((d) => parsedate(d.Date) === props.yesterday)),\r\n            d3.csv(covid19recovered, d3.autoType).then((data) =>\r\n                data.filter((d) => parsedate(d.Date) === props.yesterday)),\r\n            d3.json(mapurl, d3.autoType),\r\n        ]).then((result) => {\r\n            const total_confirmed = result[0].reduce((tot, row) => { return tot + row.Value }, 0).toLocaleString();\r\n            const total_deaths = result[1].reduce((tot, row) => { return tot + row.Value }, 0).toLocaleString();\r\n            const total_recovered = result[2].reduce((tot, row) => { return tot + row.Value }, 0).toLocaleString();\r\n\r\n            setCovid19([result[0], result[1], result[2], result[3], total_confirmed, total_deaths, total_recovered]);\r\n\r\n            return data\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        const parsedate = d3.timeFormat(\"%Y-%m-%d\")\r\n        let yesterday = new Date();\r\n        yesterday = parsedate(yesterday.setDate(yesterday.getDate() - 1));\r\n        covid19data({ yesterday });\r\n    }, []);\r\n\r\n    const fbpagedata = [\r\n        { id: 0, source: \"https://www.facebook.com/plugins/page.php?href=https%3A%2F%2Fwww.facebook.com%2FWHO&tabs=timeline&width=340&height=500&small_header=true&adapt_container_width=true&hide_cover=false&show_facepile=true&appId=872606856535732\", title: \"World Health Organization\" },\r\n        { id: 1, source: \"https://www.facebook.com/plugins/page.php?href=https%3A%2F%2Fwww.facebook.com%2Fcnn%2F&tabs=timeline&width=340&height=500&small_header=false&adapt_container_width=true&hide_cover=false&show_facepile=true&appId=872606856535732\", title: \"CNN\" },\r\n        { id: 2, source: \"https://www.facebook.com/plugins/page.php?href=https%3A%2F%2Fwww.facebook.com%2FChannelNewsAsia%2F&tabs=timeline&width=340&height=500&small_header=false&adapt_container_width=true&hide_cover=false&show_facepile=true&appId=872606856535732\", title: \"Channel News Asia\" },\r\n        { id: 3, source: \"https://www.facebook.com/plugins/page.php?href=https%3A%2F%2Fwww.facebook.com%2Fbbcnews%2F&tabs=timeline&width=340&height=500&small_header=false&adapt_container_width=true&hide_cover=false&show_facepile=true&appId=872606856535732\", title: \"BBC\" },\r\n    ]\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Navigation covid19={props.covid19} />\r\n            <main className={classes.content}>\r\n                <Toolbar />\r\n                <div className={classes.appBarSpacer} />\r\n                <Container maxWidth=\"lg\" className={classes.container}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} md={8} lg={9}>\r\n                            <Paper className={fixedHeightPaper}>\r\n                                <Typography variant=\"h4\" component=\"h2\">\r\n                                    <WorldChoropleth covid19={covid19} />\r\n                                </Typography>\r\n                            </Paper>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={4} lg={3} >\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={12} md={12} lg={12}>\r\n                                    <Paper style={{ height: 250 }}>\r\n                                        <Typography variant=\"h5\" component=\"h2\">\r\n                                            &nbsp;Summary\r\n                                    </Typography>\r\n                                        <Divider />\r\n                                        <Typography variant=\"subtitle1\" component=\"h2\">\r\n                                            &nbsp;Confirmed: {covid19[4]}\r\n                                        </Typography>\r\n                                        <Typography variant=\"subtitle1\" component=\"h2\" color=\"error\">\r\n                                            &nbsp;Deaths: {covid19[5]}\r\n                                        </Typography>\r\n                                        <Typography variant=\"subtitle1\" component=\"h2\">\r\n                                            &nbsp;Recovered: {covid19[6]}\r\n                                        </Typography>\r\n                                    </Paper>\r\n                                </Grid>\r\n                                <Grid item xs={12} md={12} lg={12}>\r\n                                    <Paper style={{ height: 250 }}>\r\n                                        <GoogleContainer />\r\n                                    </Paper>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container spacing={2}>\r\n                        {fbpagedata.map((row) => {\r\n                            return (\r\n                                <Grid item key={row.id} xs={12} md={5} lg={3}>\r\n                                    <Typography variant=\"h6\" component=\"h2\">\r\n                                        {row.title}\r\n                                    </Typography>\r\n                                    <Paper>\r\n                                        <iframe\r\n                                            src={row.source}\r\n                                            title={row.title}\r\n                                            width=\"100%\"\r\n                                            height=\"500\"\r\n                                            scrolling=\"no\"\r\n                                            frameBorder=\"0\"\r\n                                            allow=\"encrypted-media\"\r\n                                        />\r\n                                    </Paper>\r\n                                </Grid>)\r\n                        })}\r\n                    </Grid>\r\n                    <Box pt={4}>\r\n                        <Copyright />\r\n                    </Box>\r\n                </Container>\r\n            </main>\r\n        </div>\r\n    )\r\n}","import React, { useEffect } from \"react\";\r\n\r\nconst FlipboardContainer = () => {\r\n\r\n    useEffect(() => {\r\n        const script = document.createElement(\"script\");\r\n        script.src = \"https://cdn.flipboard.com/web/buttons/js/flbuttons.min.js\";\r\n        document.getElementsByClassName(\"flipboard-embed\")[0].appendChild(script);\r\n    }, []);\r\n\r\n    return (\r\n        <section className=\"flipboardContainer\">\r\n            <div className=\"flipboard-embed\">\r\n                {/* <a \r\n                    data-flip-widget=\"mag\"\r\n                    href=\"https://flipboard.com/@time/coronavirus-k68errrbz\"\r\n                    >\r\n                    </a> */}\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default FlipboardContainer;","import React, { useRef } from 'react'\r\nimport * as d3 from 'd3'\r\n\r\n\r\nexport default function DonutChart(props) {\r\n\r\n    const ref = useRef();\r\n    const pdata = props.covid19;\r\n    const pvalue = props.value;\r\n    let data = [];\r\n    const width = window.innerWidth;\r\n    const height = Math.max(width, window.innerHeight);\r\n\r\n    if (pdata.length > 0) {\r\n        const confirmed = pdata[0];\r\n        const deaths = pdata[1];\r\n        const recovered = pdata[2];\r\n        const loc = pdata[3];\r\n        const pconfirmed = pdata[4];\r\n        const pdeaths = pdata[5];\r\n        const precovered = pdata[6];\r\n\r\n        data = confirmed.map((item, i) => {\r\n            const foundlocation = loc.find((itmInner) => itmInner['Province/State'] === confirmed[i]['Province/State'] && itmInner['Country/Region'] === confirmed[i]['Country/Region']);\r\n            const founddeaths = deaths.find((itmInner) => itmInner['Province/State'] === confirmed[i]['Province/State'] && itmInner['Country/Region'] === confirmed[i]['Country/Region']);\r\n            const foundrecovered = recovered.find((itmInner) => itmInner['Province/State'] === confirmed[i]['Province/State'] && itmInner['Country/Region'] === confirmed[i]['Country/Region']);\r\n            const recover = foundrecovered ? foundrecovered['Value'] : 0\r\n            return Object.assign({}, item,\r\n                { Region: foundlocation['Region Name'] },\r\n                { Subregion: foundlocation['Sub-region Name'] },\r\n                { Deaths: founddeaths['Value'] },\r\n                { Recovered: recover });\r\n        })\r\n\r\n        data = [...data.reduce((r, o) => {\r\n            const key = o.Region;\r\n            // const continent = o.Region === null ? 'Others' : o.Region;\r\n            const item = r.get(key) || Object.assign({}, { continent: o.Region }, { total: 0 });\r\n\r\n            switch (pvalue) {\r\n                case \"Confirmed\": item.total += o.Value / pconfirmed * 100;\r\n                    break;\r\n                case \"Deaths\": item.total += o.Deaths / pdeaths * 100;\r\n                    break;\r\n                case \"Recovered\": item.total += o.Recovered / precovered * 100;\r\n                    break;\r\n                default: item.total += o.Value / pconfirmed * 100;\r\n            }\r\n\r\n            return r.set(key, item);\r\n        }, new Map()).values()]        \r\n\r\n        const svg = d3.select(ref.current)\r\n            .attr(\"viewBox\", [-width / 2, -height / 2, width, height]);\r\n\r\n        // const color = d3.scaleOrdinal(d3.schemeCategory10);\r\n        const color = d3.scaleOrdinal()\r\n            .domain(data.map(d => d.continent))\r\n            .range(d3.quantize(t => d3.interpolateSpectral(t * 0.8 + 0.1), data.length).reverse())\r\n\r\n        const pie = d3.pie()\r\n            .sort(null)\r\n            .value((d) => d.total);\r\n\r\n        const arc = d3.arc()\r\n            .innerRadius(0)\r\n            .outerRadius(Math.min(width, height) / 2)\r\n\r\n        const arcs = pie(data);\r\n\r\n        svg.selectAll(\"path\")\r\n            .data(arcs)\r\n            .join(\"path\")\r\n            .attr(\"fill\", d => color(d.data.continent))\r\n            .attr(\"d\", arc);\r\n\r\n        if (pvalue === \"\") {\r\n\r\n            svg.append(\"g\")\r\n                .attr(\"text-anchor\", \"middle\")\r\n                .selectAll(\"text\")\r\n                .data(arcs)\r\n                .join(\"text\")\r\n                .attr(\"transform\", d => `translate(${arc.centroid(d)})`)\r\n                .call(text => text.append(\"tspan\")\r\n                    .attr(\"y\", \"-0.5em\")\r\n                    .attr(\"font-size\", \"50px\")\r\n                    .text(d => d.data.continent))\r\n                .call(text => text.filter(d => (d.endAngle - d.startAngle) > 0.01).append(\"tspan\")\r\n                    .attr(\"x\", 0)\r\n                    .attr(\"y\", \"0.7em\")\r\n                    .attr(\"font-size\", \"50px\")\r\n                    .attr(\"fill-opacity\", 0.7)\r\n                    .text(d => d.data.total.toLocaleString()));\r\n        } else {\r\n            console.log(\"pie else\")\r\n            svg.selectAll(\"tspan\").remove();\r\n\r\n            svg.selectAll(\"text\")\r\n                .data(arcs)\r\n                .join(\"text\")\r\n                .attr(\"transform\", d => `translate(${arc.centroid(d)})`)\r\n                .call(text => text.append(\"tspan\")\r\n                    .attr(\"y\", \"-0.4em\")\r\n                    .attr(\"font-size\", \"50px\")\r\n                    .text(d => d.data.continent))\r\n                .call(text => text.filter(d => (d.endAngle - d.startAngle) > 0.01).append(\"tspan\")\r\n                    .attr(\"x\", 0)\r\n                    .attr(\"y\", \"0.7em\")\r\n                    .attr(\"font-size\", \"50px\")\r\n                    .attr(\"fill-opacity\", 0.7)\r\n                    .text(d => d.data.total.toLocaleString()));\r\n        }\r\n    }\r\n\r\n    return <svg ref={ref} />\r\n}\r\n","import React, { useRef } from 'react'\r\nimport * as d3 from 'd3'\r\n\r\n\r\nexport default function DonutChart(props) {\r\n\r\n    const ref = useRef();\r\n    const pdata = props.covid19;\r\n    const pvalue = props.value;\r\n    let data = [];\r\n    const width = window.innerWidth;\r\n    const height = Math.max(width, window.innerHeight);\r\n\r\n    if (pdata.length > 0) {\r\n        const confirmed = pdata[0];\r\n        const deaths = pdata[1];\r\n        const recovered = pdata[2];\r\n        const loc = pdata[3];\r\n\r\n        data = confirmed.map((item, i) => {\r\n            const foundlocation = loc.find((itmInner) => itmInner['Province/State'] === confirmed[i]['Province/State'] && itmInner['Country/Region'] === confirmed[i]['Country/Region']);\r\n            const founddeaths = deaths.find((itmInner) => itmInner['Province/State'] === confirmed[i]['Province/State'] && itmInner['Country/Region'] === confirmed[i]['Country/Region']);\r\n            const foundrecovered = recovered.find((itmInner) => itmInner['Province/State'] === confirmed[i]['Province/State'] && itmInner['Country/Region'] === confirmed[i]['Country/Region']);\r\n            const recover = foundrecovered ? foundrecovered['Value'] : 0\r\n            return Object.assign({}, item,\r\n                { Region: foundlocation['Region Name'] },\r\n                { Subregion: foundlocation['Sub-region Name'] },\r\n                { Deaths: founddeaths['Value'] },\r\n                { Recovered: recover });\r\n        })\r\n\r\n        data = [...data.reduce((r, o) => {\r\n            const key = o.Region;\r\n            // const continent = o.Region === null ? 'Others' : o.Region;\r\n            const item = r.get(key) || Object.assign({}, { continent: o.Region }, { total: 0 });\r\n\r\n            switch (pvalue) {\r\n                case \"Confirmed\": item.total += o.Value;\r\n                    break;\r\n                case \"Deaths\": item.total += o.Deaths;\r\n                    break;\r\n                case \"Recovered\": item.total += o.Recovered;\r\n                    break;\r\n                default: item.total += o.Value;\r\n            }\r\n\r\n            return r.set(key, item);\r\n        }, new Map()).values()]\r\n\r\n        const svg = d3.select(ref.current)\r\n            .attr(\"viewBox\", [-width / 2, -height / 2, width, height]);\r\n\r\n        const radius = Math.min(width, height) / 2;\r\n        const color = d3.scaleOrdinal(d3.schemeCategory10);\r\n        const pie = d3.pie()\r\n            .sort(null)\r\n            .value((d) => d.total);\r\n\r\n        const arc = d3.arc()\r\n            .outerRadius(radius)\r\n            .innerRadius(radius - (radius / 2));\r\n\r\n        const arcs = pie(data);\r\n\r\n        svg.selectAll(\"path\")\r\n            .data(arcs)\r\n            .join(\"path\")\r\n            .attr(\"fill\", d => color(d.data.continent))\r\n            .attr(\"d\", arc)\r\n            .on(\"mouseover\", handleMouseOver)\r\n            .on(\"mouseout\", handleMouseOut);\r\n\r\n        if (pvalue === \"\") {\r\n\r\n            svg.append(\"g\")\r\n                .selectAll(\"text\")\r\n                .data(arcs)\r\n                .join(\"text\")\r\n                .attr(\"transform\", d => `translate(${arc.centroid(d)})`)\r\n                .call(text => text.append(\"tspan\")\r\n                    .attr(\"y\", \"-0.4em\")\r\n                    .attr(\"text-anchor\", \"middle\")\r\n                    .attr(\"font-size\", \"50px\")\r\n                    .text(d => d.data.continent))\r\n                .call(text => text.filter(d => (d.endAngle - d.startAngle) > 0.01).append(\"tspan\")\r\n                    .attr(\"x\", 0)\r\n                    .attr(\"y\", \"0.7em\")\r\n                    .attr(\"text-anchor\", \"middle\")\r\n                    .attr(\"font-size\", \"50px\")\r\n                    .attr(\"fill-opacity\", 0.7)\r\n                    .text(d => d.data.total.toLocaleString()));\r\n        } else {\r\n            console.log(\"donut else\")\r\n            svg.selectAll(\"tspan\").remove();\r\n\r\n            svg.selectAll(\"text\")\r\n                .data(arcs)\r\n                .join(\"text\")\r\n                .attr(\"transform\", d => `translate(${arc.centroid(d)})`)\r\n                .call(text => text.append(\"tspan\")\r\n                    .attr(\"y\", \"-0.4em\")\r\n                    .attr(\"text-anchor\", \"middle\")\r\n                    .attr(\"font-size\", \"50px\")\r\n                    .text(d => d.data.continent))\r\n                .call(text => text.filter(d => (d.endAngle - d.startAngle) > 0.01).append(\"tspan\")\r\n                    .attr(\"x\", 0)\r\n                    .attr(\"y\", \"0.7em\")\r\n                    .attr(\"text-anchor\", \"middle\")\r\n                    .attr(\"font-size\", \"50px\")\r\n                    .attr(\"fill-opacity\", 0.7)\r\n                    .text(d => d.data.total.toLocaleString()));\r\n        }\r\n\r\n        function handleMouseOver(data) {\r\n            svg.append(\"text\")\r\n                .datum(data)\r\n                .attr(\"x\", 0)\r\n                .attr(\"y\", 0 + radius / 10)\r\n                .attr(\"class\", \"text-tooltip\")\r\n                .style(\"text-anchor\", \"middle\")\r\n                .attr(\"fill\", (d) => color(d.data.total))\r\n                .text((d) => (d.data.total).toLocaleString())\r\n                .style(\"font-size\", \"100px\");\r\n        }\r\n\r\n        function handleMouseOut(data) {\r\n            svg.select(\".text-tooltip\").remove();\r\n        }\r\n    }\r\n\r\n    return <svg ref={ref} />\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport * as d3 from 'd3';\r\nimport FlipboardContainer from './FlipboardContainer';\r\n\r\nimport Navigation from './Navigation';\r\nimport Copyright from '../Copyright';\r\nimport PieChart from './PieChart';\r\nimport DonutChart from './DonutChart';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    container: {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingTop: theme.spacing(2),\r\n        paddingBottom: theme.spacing(2),\r\n        paddingRight: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n    },\r\n    fixedHeight: {\r\n        height: 400,\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 115,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\n\r\nexport default function Historical(props) {\r\n    const classes = useStyles();\r\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n    const [covid19, setCovid19] = useState([]);\r\n\r\n    const covid19data = (props) => {\r\n        const covid19confirmed = \"time_series_covid19_confirmed_global_narrow.csv\"\r\n        const covid19deaths = \"time_series_covid19_deaths_global_narrow.csv\"\r\n        const covid19recovered = \"time_series_covid19_recovered_global_narrow.csv\"\r\n        const locurl = \"locations.csv\"\r\n        const parsedate = d3.timeFormat(\"%Y-%m-%d\")\r\n        const data = Promise.all([\r\n            d3.csv(covid19confirmed, d3.autoType).then(data =>\r\n                data.filter(d => parsedate(d.Date) === props.yesterday)),\r\n            d3.csv(covid19deaths, d3.autoType).then(data =>\r\n                data.filter(d => parsedate(d.Date) === props.yesterday)),\r\n            d3.csv(covid19recovered, d3.autoType).then(data =>\r\n                data.filter(d => parsedate(d.Date) === props.yesterday)),\r\n            d3.csv(locurl, d3.autoType),\r\n        ]).then(result => {\r\n            const total_confirmed = result[0].reduce((tot, row) => { return tot + row.Value }, 0);\r\n            const total_deaths = result[1].reduce((tot, row) => { return tot + row.Value }, 0);\r\n            const total_recovered = result[2].reduce((tot, row) => { return tot + row.Value }, 0);\r\n\r\n            setCovid19([result[0], result[1], result[2], result[3], total_confirmed, total_deaths, total_recovered]);\r\n        });\r\n        return data\r\n    }\r\n\r\n    useEffect(() => {\r\n        const parsedate = d3.timeFormat(\"%Y-%m-%d\");\r\n        let yesterday = new Date();\r\n        yesterday = parsedate(yesterday.setDate(yesterday.getDate() - 1));\r\n        covid19data({ yesterday });\r\n    }, []);\r\n\r\n\r\n    const valueby = [\"Confirmed\", \"Deaths\", \"Recovered\"];\r\n    const [value, setValue] = useState(\"\");\r\n    const [valued, setValued] = useState(\"\");\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n    };\r\n\r\n    const handleChanged = (event) => {\r\n        setValued(event.target.value);\r\n    };\r\n\r\n    const flipboardleftdata = [\r\n        { id: 0, source: \"https://flipboard.com/@time/coronavirus-k68errrbz\", title: \"Time\" },\r\n        { id: 1, source: \"https://flipboard.com/@foxbusiness/coronavirus-d1mqgfrsz\", title: \"Fox Business\" },\r\n        { id: 2, source: \"https://flipboard.com/@mashable/coronavirus-7c2710kbz\", title: \"Mashable\" },\r\n    ]\r\n\r\n    const flipboardrightdata = [\r\n        { id: 0, source: \"https://flipboard.com/@cnbc/coronavirus-impact-on-the-economy-o28s96a0z\", title: \"CNBC\" },\r\n        { id: 1, source: \"https://flipboard.com/@euronews/coronavirus-g48p11mez\", title: \"Euro News\" },\r\n        { id: 2, source: \"https://flipboard.com/@tech/predicting-covid-19-using-a-i-n0cc32pl3muk063g\", title: \"Tech\" }\r\n    ]\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <FlipboardContainer />\r\n            <Navigation />\r\n            <main className={classes.content}>\r\n                <Toolbar />\r\n                <div className={classes.appBarSpacer} />\r\n                <Container maxWidth=\"lg\" className={classes.container}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} md={4} lg={4}>\r\n                            <Grid item xs={12} md={8} lg={12}>\r\n                                <FormControl className={classes.formControl}>\r\n                                    <InputLabel id=\"pie-select-label\">% Rate</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"pie-select-label\"\r\n                                        id=\"pie-select\"\r\n                                        value={value}\r\n                                        onChange={handleChange}\r\n                                    >\r\n                                        {valueby.map((row) => {\r\n                                            return (<MenuItem key={row} value={row}>{row}</MenuItem>)\r\n                                        })}\r\n                                    </Select>\r\n                                </FormControl>\r\n                                <FormHelperText>*Source: data.humdata.org</FormHelperText>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={8} lg={12}>\r\n                                <Paper className={fixedHeightPaper}>\r\n                                    <PieChart covid19={covid19} value={value} />\r\n                                </Paper>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={4} lg={4}>\r\n                            <Grid item xs={12} md={8} lg={12}>\r\n                                <FormControl className={classes.formControl}>\r\n                                    <InputLabel id=\"pie-select-label\">Cases</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"pie-select-label\"\r\n                                        id=\"pie-select\"\r\n                                        value={valued}\r\n                                        onChange={handleChanged}\r\n                                    >\r\n                                        {valueby.map((row) => {\r\n                                            return (<MenuItem key={row} value={row}>{row}</MenuItem>)\r\n                                        })}\r\n                                    </Select>\r\n                                </FormControl>\r\n                                <FormHelperText>*Source: data.humdata.org</FormHelperText>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={8} lg={12}>\r\n                                <Paper className={fixedHeightPaper}>\r\n                                    <DonutChart covid19={covid19} value={valued} />\r\n                                </Paper>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={12} lg={2}>\r\n                            <Grid item xs={12} md={12} lg={12}>\r\n                                {flipboardleftdata.map((row) => {\r\n                                    return (\r\n                                        <Grid key={row.id} container justify=\"center\" spacing={1}>\r\n                                            <Grid item xs={12} md={12} lg={12}>\r\n                                                <div align=\"center\">\r\n                                                    <Paper elevation={0}>\r\n                                                        <a data-flip-widget=\"mag\" href={row.source}>{row.title}</a>\r\n                                                    </Paper>\r\n                                                </div>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    )\r\n                                })}\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6} lg={2}>\r\n                            <Grid item xs={12} md={12} lg={12}>\r\n                                {flipboardrightdata.map((row) => {\r\n                                    return (\r\n                                        <Grid key={row.id} container justify=\"center\" spacing={1}>\r\n                                            <Grid item xs={12} md={12} lg={12}>\r\n                                                <div align=\"center\">\r\n                                                    <Paper elevation={0}>\r\n                                                        <a data-flip-widget=\"mag\" href={row.source}>{row.title}</a>\r\n                                                    </Paper>\r\n                                                </div>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    )\r\n                                })}\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Box pt={4}>\r\n                        <Copyright />\r\n                    </Box>\r\n                </Container>\r\n            </main>\r\n        </div>\r\n    )\r\n}","import React, { useEffect } from \"react\";\r\n\r\nconst TwitterContainer = () => {\r\n\r\n  useEffect(() => {\r\n    const script = document.createElement(\"script\");\r\n    script.src = \"https://platform.twitter.com/widgets.js\";\r\n    document.getElementsByClassName(\"twitter-embed\")[0].appendChild(script);\r\n  }, []);\r\n\r\n  \r\n  return (\r\n    <section className=\"twitterContainer\">\r\n      <div className=\"twitter-embed\">\r\n        {/* <a\r\n          className=\"twitter-timeline\"\r\n          data-theme=\"dark\"\r\n          data-tweet-limit=\"5\"\r\n          data-chrome=\"noheader nofooter noborders\"\r\n          href=\"https://twitter.com/sporeMOH\"\r\n        >\r\n        </a> */}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default TwitterContainer;","import React, { useRef } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\n\r\nexport default function BarChart(props) {\r\n\r\n    const ref = useRef();\r\n    const pdata = props.covid19;\r\n    const pvalue = props.value;\r\n    const margin = ({ top: 20, right: 20, bottom: 150, left: 70 });\r\n    const width = window.innerWidth;\r\n    const height = window.innerHeight;\r\n    const color = \"steelblue\";\r\n\r\n    if (pdata.length > 0) {\r\n        let temp = [];\r\n\r\n        switch (pvalue) {\r\n            case \"Confirmed\": temp = pdata[0];\r\n                break;\r\n            case \"Deaths\": temp = pdata[1];\r\n                break;\r\n            case \"Recovered\": temp = pdata[2];\r\n                break;\r\n            default: temp = pdata[0];\r\n        }\r\n\r\n        const data = [...temp.reduce((r, o) => {\r\n            const key = o['Country/Region'];\r\n            const item = r.get(key) || Object.assign({}, { country: o['Country/Region'] }, { total: 0 });\r\n            item.total += o.Value;\r\n            return r.set(key, item);\r\n        }, new Map()).values()].sort((a, b) => b.total - a.total)\r\n            .slice(0, 50)\r\n\r\n        const svg = d3.select(ref.current)\r\n            .attr(\"viewBox\", [0, 0, width, height]);\r\n\r\n        const x = d3.scaleBand()\r\n            .domain(d3.range(data.length))\r\n            .range([margin.left, width - margin.right])\r\n            .padding(0.1);\r\n\r\n        const y = d3.scaleLinear()\r\n            .domain([0, d3.max(data, d => d.total)]).nice()\r\n            .range([height - margin.bottom, margin.top]);\r\n\r\n        const xAxis = d3.axisBottom()\r\n            .scale(x)\r\n            .tickFormat(i => data[i].country);\r\n\r\n        const yAxis = d3.axisLeft()\r\n            .scale(y)\r\n            .ticks(15, data.format);\r\n\r\n        svg.append(\"text\")\r\n            .attr(\"x\", width / 2)\r\n            .attr(\"y\", height)\r\n            .attr(\"fill\", \"currentColor\")\r\n            .attr(\"text-anchor\", \"middle\")\r\n            .attr(\"font-weight\", \"bold\")\r\n            .attr('font-size', '20px')\r\n            .text(\"Country\");\r\n\r\n        svg.append(\"text\")\r\n            .attr(\"transform\", \"rotate(-90)\")\r\n            .attr(\"x\", -height / 2)\r\n            .attr(\"y\", -margin.left)\r\n            .attr(\"dy\", \"1em\")\r\n            .attr(\"fill\", \"currentColor\")\r\n            .attr(\"text-anchor\", \"middle\")\r\n            .attr(\"font-weight\", \"bold\")\r\n            .attr('font-size', '20px')\r\n            .text(\"Total\");\r\n\r\n        if (pvalue === \"\") {\r\n\r\n            svg.append('g')\r\n                .attr('class', 'x axis')\r\n                .attr(\"transform\", `translate(0,${height - margin.bottom})`)\r\n                .call(xAxis)\r\n                .attr('font-size', '16px')\r\n                .selectAll(\"text\")\r\n                .attr(\"transform\", \"rotate(-90)\")\r\n                .attr(\"text-anchor\", \"end\")\r\n                .attr(\"dx\", \"-.5em\")\r\n                .attr(\"dy\", \"-.5em\");\r\n\r\n            svg.append('g')\r\n                .attr('class', 'y axis')\r\n                .attr(\"transform\", `translate(${margin.left},0)`)\r\n                .call(yAxis)\r\n                .attr('font-size', '16px');\r\n\r\n            svg.append(\"g\")\r\n                .attr('class', '.rect')\r\n                .attr(\"fill\", color)\r\n                .selectAll(\"rect\")\r\n                .data(data)\r\n                .join(\"rect\")\r\n                .attr(\"x\", (d, i) => x(i))\r\n                .attr(\"y\", d => y(d.total))\r\n                .attr(\"height\", d => y(0) - y(d.total))\r\n                .attr(\"width\", x.bandwidth());\r\n\r\n        } else {\r\n\r\n            const trans = svg.transition().duration(300);\r\n            const trans1 = trans.transition();\r\n\r\n            svg.selectAll(\".rect\")\r\n                .exit()\r\n                .transition()\r\n                .delay(100)\r\n                .duration(300)\r\n                .remove();\r\n\r\n            svg.selectAll(\"rect\")\r\n                .data(data)\r\n                .transition()\r\n                .duration(1000)\r\n                .ease(d3.easeBounceOut)\r\n                .attr(\"x\", (d, i) => x(i))\r\n                .attr(\"y\", d => y(d.total))\r\n                .attr(\"height\", d => y(0) - y(d.total))\r\n                .attr(\"width\", x.bandwidth());\r\n\r\n            trans1.selectAll(\".x.axis\").call(xAxis);\r\n            trans1.selectAll(\".y.axis\").call(yAxis);\r\n        }\r\n    }\r\n\r\n    return <svg ref={ref} />\r\n}","import React, { useState, useEffect, useRef } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport * as d3 from 'd3';\r\nimport TwitterContainer from './TwitterContainer';\r\n\r\nimport Navigation from './Navigation';\r\nimport Copyright from '../Copyright';\r\nimport BarChart from './BarChart';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    container: {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingTop: theme.spacing(2),\r\n        paddingBottom: theme.spacing(2),\r\n        paddingRight: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n    },\r\n    fixedHeight: {\r\n        height: 450,\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 115,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\n\r\nexport default function BarCharts(props) {\r\n    const classes = useStyles();\r\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n    const [covid19, setCovid19] = useState([])\r\n\r\n    const covid19data = (props) => {\r\n        const covid19confirmed = \"time_series_covid19_confirmed_global_narrow.csv\"\r\n        const covid19deaths = \"time_series_covid19_deaths_global_narrow.csv\"\r\n        const covid19recovered = \"time_series_covid19_recovered_global_narrow.csv\"\r\n        const parsedate = d3.timeFormat(\"%Y-%m-%d\")\r\n        const data = Promise.all([\r\n            d3.csv(covid19confirmed, d3.autoType).then(data =>\r\n                data.filter(d => parsedate(d.Date) === props.yesterday)),\r\n            d3.csv(covid19deaths, d3.autoType).then(data =>\r\n                data.filter(d => parsedate(d.Date) === props.yesterday)),\r\n            d3.csv(covid19recovered, d3.autoType).then(data =>\r\n                data.filter(d => parsedate(d.Date) === props.yesterday)),\r\n        ]).then(result => {\r\n            setCovid19([result[0], result[1], result[2]]);\r\n        });\r\n        return data\r\n    }\r\n\r\n    useEffect(() => {\r\n        const parsedate = d3.timeFormat(\"%Y-%m-%d\")\r\n        let yesterday = new Date();\r\n        yesterday = parsedate(yesterday.setDate(yesterday.getDate() - 1));\r\n        covid19data({ yesterday });\r\n    }, []);\r\n\r\n    const usePreviousValue = value => {\r\n        const ref = useRef();\r\n        useEffect(() => {\r\n            ref.current = value;\r\n        });\r\n        return ref.current;\r\n    };\r\n\r\n    const valueby = [\"Confirmed\", \"Deaths\", \"Recovered\"];\r\n    const [value, setValue] = useState(\"\");\r\n    const prevValue = usePreviousValue(value);\r\n\r\n    const twitterdata = [\r\n        // { id: 0, source: \"https://twitter.com/WHO\", title: \"World Health Organization\" },\r\n        { id: 1, source: \"https://twitter.com/ChannelNewsAsia\", title: \"Channel News Asia\" },\r\n        { id: 2, source: \"https://twitter.com/bbcworld\", title: \"BBC World\" },\r\n        { id: 3, source: \"https://twitter.com/CNN\", title: \"CNN\" },\r\n        { id: 4, source: \"https://twitter.com/EuroNews\", title: \"Euro News\" },\r\n    ];\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <TwitterContainer />\r\n            <Navigation />\r\n            <main className={classes.content}>\r\n                <Toolbar />\r\n                <div className={classes.appBarSpacer} />\r\n                <Container maxWidth=\"lg\" className={classes.container}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} md={6} lg={9}>\r\n                            <Grid item xs={12} md={8} lg={12}>\r\n                                <FormControl className={classes.formControl}>\r\n                                    <InputLabel id=\"bar-select-label\">Top 50 Cases</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"bar-select-label\"\r\n                                        id=\"bar-select\"\r\n                                        value={value}\r\n                                        onChange={e => setValue(e.target.value)}\r\n                                    >\r\n                                        {valueby.map((row) => {\r\n                                            return (<MenuItem key={row} value={row}>{row}</MenuItem>)\r\n                                        })}\r\n                                    </Select>\r\n                                </FormControl>\r\n                                <FormHelperText>*Source: data.humdata.org</FormHelperText>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={8} lg={12}>\r\n                                <Paper className={fixedHeightPaper}>\r\n                                    <BarChart covid19={covid19} value={value} prevValue={prevValue} />\r\n                                </Paper>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={3} lg={3}>\r\n                            <Paper className={fixedHeightPaper}>\r\n                                <a className=\"twitter-timeline\" href=\"https://twitter.com/WHO\">WHO</a>\r\n                            </Paper>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container spacing={2}>\r\n                        {twitterdata.map((row) => {\r\n                            return (\r\n                                <Grid item key={row.id} xs={12} md={3} lg={3}>\r\n                                    <Paper className={fixedHeightPaper}>\r\n                                        <a className=\"twitter-timeline\" href={row.source}>{row.title}</a>\r\n                                    </Paper>\r\n                                </Grid>)\r\n                        })}\r\n                    </Grid>\r\n                    <Box pt={4}>\r\n                        <Copyright />\r\n                    </Box>\r\n                </Container>\r\n            </main>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  const handleFirstPageButtonClick = (event) => {\r\n    onChangePage(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = (event) => {\r\n    onChangePage(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = (event) => {\r\n    onChangePage(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = (event) => {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles2 = makeStyles({\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n});\r\n\r\nexport default function TableChart(props) {\r\n  const classes = useStyles2();\r\n  const pdata = props.covid19;\r\n  let data = [];\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(30);\r\n\r\n  if (pdata.length > 0) {\r\n    const confirmed = pdata[0];\r\n    const deaths = pdata[1];\r\n    const recovered = pdata[2];\r\n    const loc = pdata[3];\r\n\r\n    data = confirmed.map((item, i) => {\r\n      const foundlocation = loc.find((itmInner) => itmInner['Province/State'] === confirmed[i]['Province/State'] && itmInner['Country/Region'] === confirmed[i]['Country/Region']);\r\n      const founddeaths = deaths.find((itmInner) => itmInner['Province/State'] === confirmed[i]['Province/State'] && itmInner['Country/Region'] === confirmed[i]['Country/Region']);\r\n      const foundrecovered = recovered.find((itmInner) => itmInner['Province/State'] === confirmed[i]['Province/State'] && itmInner['Country/Region'] === confirmed[i]['Country/Region']);\r\n      const recover = foundrecovered ? foundrecovered['Value'] : 0\r\n      return Object.assign({}, item,\r\n        { Region: foundlocation['Region Name'] },\r\n        { Subregion: foundlocation['Sub-region Name'] },\r\n        { Deaths: founddeaths['Value'] },\r\n        { Recovered: recover });\r\n    })\r\n\r\n    data.sort((a, b) => a['Region Code'] - b['Region Code']);\r\n  }\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, (data.length > 0 ? data.length : 0) - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n\r\n  return (\r\n    data.length > 0 ? (\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"custom pagination table\">\r\n          <TableBody>\r\n            <TableRow style={{ backgroundColor: \"#3F51B5\" }} key={\"Header\"}>\r\n              <TableCell style={{ color: \"white\" }}>Region</TableCell>\r\n              <TableCell style={{ color: \"white\" }} component=\"th\" >Countries</TableCell>\r\n              <TableCell style={{ color: \"white\" }}>Province/State</TableCell>\r\n              <TableCell style={{ color: \"white\" }}>Confirmed</TableCell>\r\n              <TableCell style={{ color: \"white\" }}>Deaths</TableCell>\r\n              <TableCell style={{ color: \"white\" }}>Rate</TableCell>              \r\n              <TableCell style={{ color: \"white\" }}>Recovered</TableCell>\r\n              <TableCell style={{ color: \"white\" }}>Rate</TableCell>\r\n            </TableRow>\r\n            {(rowsPerPage > 0\r\n              ? data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              : data\r\n            ).map((row) => (\r\n              <TableRow key={row.Region + row.Subregion + row['Country/Region'] + row['Province/State']}>\r\n                <TableCell component=\"th\">{row.Region}</TableCell>\r\n                <TableCell component=\"th\">{row['Country/Region']}</TableCell>\r\n                <TableCell component=\"th\">{row['Province/State']}</TableCell>\r\n                <TableCell align=\"right\">{row.Value.toLocaleString()}</TableCell>\r\n                <TableCell align=\"right\">{row.Deaths.toLocaleString()}</TableCell>\r\n                <TableCell align=\"right\">{((row.Deaths / row.Value) * 100).toFixed(2).toLocaleString()}</TableCell>                \r\n                <TableCell align=\"right\">{row.Recovered.toLocaleString()}</TableCell>\r\n                <TableCell align=\"right\">{((row.Recovered / row.Value) * 100).toFixed(2).toLocaleString()}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n\r\n            {emptyRows > 0 && (\r\n              <TableRow style={{ height: 60 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[30, 60, 90, 150, { label: 'All', value: -1 }]}\r\n                colSpan={9}\r\n                count={data.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </TableContainer>\r\n    ) : null\r\n  );\r\n}","import React, { Component } from 'react';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nconst useStyles = theme => ({\r\n    root: {\r\n        minWidth: 275,\r\n        padding: 5,\r\n    },\r\n    title: {\r\n        fontSize: 12,\r\n    },\r\n    container: {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingTop: theme.spacing(2),\r\n        paddingBottom: theme.spacing(2),\r\n        paddingRight: theme.spacing(2),\r\n    },\r\n});\r\n\r\nclass GoogleNewsFeed extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            data: null,\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\r\n        const url = \"https://news.google.com/rss/search?q=covid19\";\r\n        const parser = new DOMParser();\r\n\r\n        const newsfeed = await fetch(proxyurl + url);\r\n        const newsfeedbody = await newsfeed.text();\r\n        const newsfeeddom = parser.parseFromString(newsfeedbody, \"text/xml\");\r\n        const newsfeeditem = newsfeeddom.getElementsByTagName(\"item\");\r\n        const layout = Array.from(newsfeeditem);\r\n        this.setState({ data: layout })\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            this.state.data ? (\r\n                (this.state.data.slice(0, 10)).map((row) => (\r\n                    <Grid key={row.getElementsByTagName(\"guid\")[0].textContent} container spacing={2}>\r\n                        <Grid item xs={6} md={10} lg={12}>\r\n                            <Card className={classes.root}>\r\n                                <CardContent className={classes.root}>\r\n                                    <Typography className={classes.title} gutterBottom> {row.getElementsByTagName(\"pubDate\")[0].textContent} </Typography>\r\n                                    <Typography color=\"primary\" variant=\"h6\"> {row.getElementsByTagName(\"source\")[0].textContent} </Typography>\r\n                                    <Typography variant=\"body2\"> {row.getElementsByTagName(\"title\")[0].textContent} </Typography>\r\n                                </CardContent>\r\n                                <CardActions>\r\n                                    <Button color=\"primary\" size=\"small\" onClick={()=> window.open(row.getElementsByTagName(\"link\")[0].textContent)}>More</Button>\r\n                                </CardActions>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                ))\r\n            ) : null\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(GoogleNewsFeed);","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\nimport * as d3 from 'd3';\r\n\r\nimport Navigation from './Navigation';\r\nimport Copyright from '../Copyright';\r\nimport TableChart from './TableChart';\r\nimport GoogleNewsfeed from './GoogleNewsfeed';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    container: {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingTop: theme.spacing(2),\r\n        paddingBottom: theme.spacing(2),\r\n        paddingRight: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n    },\r\n    fixedHeight: {\r\n        height: 1750,\r\n    },\r\n}));\r\n\r\n\r\nexport default function TableCharts(props) {\r\n    const classes = useStyles();\r\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n    const [covid19, setCovid19] = useState([])\r\n\r\n    const covid19data = (props) => {\r\n        const covid19confirmed = \"time_series_covid19_confirmed_global_narrow.csv\"\r\n        const covid19deaths = \"time_series_covid19_deaths_global_narrow.csv\"\r\n        const covid19recovered = \"time_series_covid19_recovered_global_narrow.csv\"\r\n        const locurl = \"locations.csv\"\r\n        const parsedate = d3.timeFormat(\"%Y-%m-%d\")\r\n        const data = Promise.all([\r\n            d3.csv(covid19confirmed, d3.autoType).then(data =>\r\n                data.filter(d => parsedate(d.Date) === props.yesterday)),\r\n            d3.csv(covid19deaths, d3.autoType).then(data =>\r\n                data.filter(d => parsedate(d.Date) === props.yesterday)),\r\n            d3.csv(covid19recovered, d3.autoType).then(data =>\r\n                data.filter(d => parsedate(d.Date) === props.yesterday)),\r\n            d3.csv(locurl, d3.autoType),\r\n        ]).then(result => {\r\n            setCovid19([result[0], result[1], result[2], result[3]]);\r\n        });\r\n        return data\r\n    }\r\n\r\n    useEffect(() => {\r\n        const parsedate = d3.timeFormat(\"%Y-%m-%d\")\r\n        let yesterday = new Date();\r\n        yesterday = parsedate(yesterday.setDate(yesterday.getDate() - 1));\r\n        covid19data({ yesterday });\r\n    }, []);\r\n\r\n    // const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\r\n    // const url = \"https://news.google.com/rss/search?q=covid19&num=10\";\r\n\r\n    // const googlenewsfeed = fetch(proxyurl + url)\r\n    //     .then(body => body.text())\r\n    //     .then(result => {\r\n    //         const parser = new DOMParser();            \r\n    //         const dom = parser.parseFromString(result, \"text/xml\");\r\n    //         return result = dom.getElementsByTagName(\"item\");\r\n    //     });\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Navigation />\r\n            <main className={classes.content}>\r\n                <Toolbar />\r\n                <div className={classes.appBarSpacer} />\r\n                <Container maxWidth=\"lg\" className={classes.container}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} md={8} lg={9}>\r\n                            <Paper className={fixedHeightPaper}>\r\n                                <FormHelperText>*Source: data.humdata.org</FormHelperText>\r\n                                <TableChart covid19={covid19} />\r\n                            </Paper>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={4} lg={3}>\r\n                            <Grid item xs={12} md={4} lg={12}>\r\n                                <GoogleNewsfeed />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Box pt={4}>\r\n                        <Copyright />\r\n                    </Box>\r\n                </Container>\r\n            </main>\r\n        </div >\r\n    )\r\n}","import React, { useRef } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\n\r\nexport default function LineChart(props) {\r\n\r\n    const ref = useRef()\r\n    const pdata = props.covid19;\r\n    const pvalue = props.value;\r\n    const margin = { top: 20, right: 20, bottom: 20, left: 70 };\r\n    const width = window.innerWidth;\r\n    const height = window.innerHeight;\r\n\r\n    const parsedate = d3.timeFormat(\"%Y-%m-%d\")\r\n    const bisectDate = d3.bisector(d => d.date).left;\r\n    const formatValue = d3.format(',.0f');\r\n\r\n    if (pdata.length > 0) {\r\n\r\n        const temp = pvalue === \"\" ? pdata[0] : pdata[0].filter((d) => (d['Country/Region'] === pvalue));\r\n\r\n        const data = [...temp.reduce((r, o) => {\r\n            const key = parsedate(o.Date);\r\n            const item = r.get(key) || Object.assign({}, { country: o['Country/Region'] }, { date: o.Date }, { total: 0 });\r\n            item.total += o.Value;\r\n            return r.set(key, item);\r\n        }, new Map()).values()]\r\n\r\n        data.sort((a, b) => a.date - b.date);\r\n\r\n        const svg = d3.select(ref.current)\r\n            .attr(\"viewBox\", [0, -10, width + margin.left + margin.right + 10, height + margin.top + margin.bottom]);\r\n\r\n        const x = d3.scaleTime()\r\n            .domain([data[0].date, data[data.length - 1].date])\r\n            .range([0, width]);\r\n\r\n        const y = d3.scaleLinear()\r\n            .domain(d3.extent(data, d => d.total)).nice()\r\n            .range([height, 0]);\r\n\r\n        const line = d3.line()\r\n            .x(d => x(d.date))\r\n            .y(d => y(d.total));\r\n\r\n        const xAxis = d3.axisBottom()\r\n            .scale(x);\r\n\r\n        const yAxis = d3.axisLeft()\r\n            .scale(y);\r\n\r\n        const focus = svg.append('g')\r\n            .attr('class', 'focus')\r\n            .style('display', 'none');\r\n\r\n\r\n        if (pvalue === \"\") {\r\n\r\n            svg.append('g')\r\n                .attr('class', 'x axis')\r\n                .style(\"font\", \"20px times\")\r\n                .attr('transform', `translate(0, ${height})`)\r\n                .call(xAxis);\r\n\r\n            svg.append('g')\r\n                .attr('class', 'y axis')\r\n                .style(\"font\", \"20px times\")\r\n                .call(yAxis)\r\n                .append('text')\r\n                .attr('class', 'axis-title')\r\n                .attr('transform', 'rotate(-90)')\r\n                .attr('y', 6)\r\n                .attr('dy', '.71em')\r\n                .style('text-anchor', 'end')\r\n                .text('Total Cases');\r\n\r\n            svg.append('path')\r\n                .datum(data)\r\n                .attr('class', 'line')\r\n                .attr('d', line);\r\n\r\n            focus.append('circle')\r\n                .attr('r', 4.5);\r\n\r\n            focus.append('line')\r\n                .classed('x', true);\r\n\r\n            focus.append('line')\r\n                .classed('y', true);\r\n\r\n            focus.append('text')\r\n                .attr('x', 9)\r\n                .attr('dy', '.35em');\r\n\r\n            svg.append('rect')\r\n                .attr('class', 'overlay')\r\n                .attr('width', width)\r\n                .attr('height', height)\r\n                .attr('opacity', 0.0)\r\n                .on('mouseover', () => focus.style('display', null))\r\n                .on('mouseout', () => focus.style('display', 'none'))\r\n                .on('mousemove', mousemove);\r\n\r\n            d3.selectAll('.line')\r\n                .style(\"fill\", 'none')\r\n                .style(\"stroke\", 'steelblue')\r\n                .style(\"stroke-width\", '1.5px');\r\n\r\n            d3.select('.overlay')\r\n                .style(\"fill\", 'none')\r\n                .style(\"pointer-events\", 'all');\r\n\r\n            d3.selectAll('.focus')\r\n                .style('opacity', 0.7);\r\n\r\n            d3.selectAll('.focus circle')\r\n                .style(\"fill\", 'none')\r\n                .style(\"stroke\", 'black');\r\n\r\n            d3.selectAll('.focus line')\r\n                .style(\"fill\", 'none')\r\n                .style(\"stroke\", 'black')\r\n                .style(\"stroke-width\", '1.5px')\r\n                .style(\"stroke-dasharray\", '3 3');\r\n\r\n        } else {\r\n\r\n            const trans = svg.transition().duration(300);\r\n            const trans1 = trans.transition();\r\n\r\n            svg.selectAll(\"path.line\").datum(data);\r\n\r\n            trans1.selectAll(\"path.line\").attr(\"d\", line);\r\n            trans1.selectAll(\".x.axis\").call(xAxis);\r\n            trans1.selectAll(\".y.axis\").call(yAxis);\r\n        }\r\n\r\n        function mousemove() {\r\n            const x0 = x.invert(d3.mouse(this)[0]);\r\n            const i = bisectDate(data, x0, 1);\r\n            const d0 = data[i - 1];\r\n            const d1 = data[i];\r\n            const d = x0 - d0.date > d1.date - x0 ? d1 : d0;\r\n            focus.attr('transform', `translate(${x(d.date)}, ${y(d.total)})`);\r\n            focus.select('line.x')\r\n                .attr('x1', 0)\r\n                .attr('x2', -x(d.date))\r\n                .attr('y1', 0)\r\n                .attr('y2', 0);\r\n\r\n            focus.select('line.y')\r\n                .attr('x1', 0)\r\n                .attr('x2', 0)\r\n                .attr('y1', 0)\r\n                .attr('y2', height - y(d.total));\r\n\r\n            focus.select('text')\r\n                .attr(\"font-size\", 20)\r\n                .style('font-weight', 900)\r\n                .text(formatValue(d.total));\r\n        }\r\n\r\n    }\r\n\r\n    return <svg ref={ref} />\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Select from '@material-ui/core/Select';\r\nimport * as d3 from 'd3';\r\n\r\nimport Navigation from './Navigation';\r\nimport Copyright from '../Copyright';\r\nimport LineChart from './LineChart';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    container: {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingTop: theme.spacing(2),\r\n        paddingBottom: theme.spacing(2),\r\n        paddingRight: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n    },\r\n    fixedHeight: {\r\n        height: 400,\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\n\r\nexport default function LineCharts(props) {\r\n    const classes = useStyles();\r\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n    const [covid19, setCovid19] = useState([])\r\n\r\n    const covid19data = (props) => {\r\n        const covid19confirmed = \"time_series_covid19_confirmed_global_narrow.csv\"\r\n        const covid19deaths = \"time_series_covid19_deaths_global_narrow.csv\"\r\n        const covid19recovered = \"time_series_covid19_recovered_global_narrow.csv\"\r\n        const data = Promise.all([\r\n            d3.csv(covid19confirmed, d3.autoType).then(data =>\r\n                data.filter(d => d['Country/Region'] !== \"#country+name\")),\r\n            d3.csv(covid19deaths, d3.autoType).then(data =>\r\n                data.filter(d => d['Country/Region'] !== \"#country+name\")),\r\n            d3.csv(covid19recovered, d3.autoType).then(data =>\r\n                data.filter(d => d['Country/Region'] !== \"#country+name\")),\r\n        ]).then(result => {\r\n            setCovid19([result[0], result[1], result[2]]);\r\n        });\r\n        return data\r\n    }\r\n\r\n    useEffect(() => {\r\n        const parsedate = d3.timeFormat(\"%Y-%m-%d\")\r\n        let yesterday = new Date();\r\n        yesterday = parsedate(yesterday.setDate(yesterday.getDate() - 1));\r\n        covid19data({ yesterday });\r\n    }, []);\r\n\r\n    let countries = [];\r\n    if (covid19.length > 0) {\r\n        countries = [...new Set(covid19[0].map(itm => itm['Country/Region']))];\r\n    }\r\n\r\n    const [value, setValue] = useState(\"\");\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n    };\r\n\r\n    const youtubedata = [\r\n        { id: 0, source: \"https://www.youtube.com/embed/9Auq9mYxFEE\", title: \"CNA News\" },\r\n        { id: 1, source: \"https://www.youtube.com/embed/w_Ma8oQLmSM\", title: \"ABC News\" },\r\n        { id: 2, source: \"https://www.youtube.com/embed/9Auq9mYxFEE\", title: \"Sky News\" },\r\n        { id: 3, source: \"https://www.youtube.com/embed/tPeUHECNLKs\", title: \"NBC News\" },\r\n        // { id: 4, source: \"https://www.youtube.com/embed/BJzSJlMwQcA\", title: \"Euro News\" },\r\n    ];\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Navigation />\r\n            <main className={classes.content}>\r\n                <Toolbar />\r\n                <div className={classes.appBarSpacer} />\r\n                <Container maxWidth=\"lg\" className={classes.container}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} md={6} lg={9}>\r\n                            <Grid item xs={12} md={8} lg={12}>\r\n                                <FormControl className={classes.formControl}>\r\n                                    <InputLabel id=\"countries-select-label\">Countries</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"countries-select-label\"\r\n                                        id=\"countries-select\"\r\n                                        value={value}\r\n                                        onChange={handleChange}\r\n                                    >\r\n                                        {countries.map((row) => (\r\n                                            <MenuItem key={row} value={row}>{row}</MenuItem>\r\n                                        ))}\r\n                                    </Select>\r\n                                </FormControl>\r\n                                <FormHelperText>*Source: data.humdata.org</FormHelperText>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={8} lg={12}>\r\n                                <Paper className={fixedHeightPaper}>\r\n                                    <LineChart covid19={covid19} value={value} />\r\n                                </Paper>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={4} lg={3}>\r\n                            {youtubedata.map((row) => {\r\n                                return (<Grid item key={row.id} xs={12} md={4} lg={12}>\r\n                                    <Typography variant=\"h6\" component=\"h2\">{row.title}</Typography>\r\n                                    <Paper>\r\n                                        <div\r\n                                            className=\"video\"\r\n                                            style={{\r\n                                                position: \"relative\",\r\n                                                paddingBottom: \"56.25%\",\r\n                                                paddingTop: 10,\r\n                                                height: 0\r\n                                            }}\r\n                                        >\r\n                                            <iframe\r\n                                                style={{\r\n                                                    position: \"absolute\",\r\n                                                    width: \"100%\",\r\n                                                    height: \"90%\"\r\n                                                }}\r\n                                                src={row.source}\r\n                                                frameBorder='0'\r\n                                                allow='autoplay; encrypted-media'\r\n                                                allowFullScreen\r\n                                                title={row.title}\r\n                                            />\r\n                                        </div>\r\n                                    </Paper>\r\n                                </Grid>)\r\n                            })}\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Box pt={4}>\r\n                        <Copyright />\r\n                    </Box>\r\n                </Container>\r\n            </main>\r\n        </div>\r\n    )\r\n}","import React, { useRef } from \"react\";\r\nimport * as d3 from \"d3\";\r\n\r\n\r\nexport default function BarChartRace(props) {\r\n\r\n  const ref = useRef();\r\n  const pdata = props.covid19;\r\n  const pvalue = props.value;\r\n  const tickDuration = 500;\r\n  const top_n = 15;\r\n  const width = window.innerWidth;\r\n  const height = window.innerHeight;\r\n  const margin = { top: 20, right: 0, bottom: 0, left: 0 };\r\n  let barPadding = (height - (margin.bottom + margin.top)) / (top_n * 5);\r\n\r\n  d3.selectAll(\"g\").remove();\r\n\r\n  const el = d3.select(ref.current)\r\n    .attr(\"viewBox\", [-120, 0, width + 200, height]);\r\n\r\n  d3.selectAll(\"g\").remove();\r\n\r\n  const svg = el.append(\"g\")\r\n    .attr('width', width)\r\n    .attr('height', height);\r\n\r\n  const parsedate = d3.timeFormat(\"%Y-%m-%d\")\r\n  let yesterday = new Date();\r\n  yesterday = parsedate(yesterday.setDate(yesterday.getDate() - 2));\r\n  let period = new Date(\"2020-02-01\");\r\n  let temp = [];\r\n\r\n  if (pdata.length > 0) {\r\n\r\n    switch (pvalue) {\r\n      case \"Confirmed\": temp = pdata[0];\r\n        break;\r\n      case \"Deaths\": temp = pdata[1];\r\n        break;\r\n      case \"Recovered\": temp = pdata[2];\r\n        break;\r\n      default: temp = pdata[0];\r\n    }\r\n\r\n    const data = [...temp.reduce((r, o) => {\r\n      const key = o['Country/Region'] + parsedate(o.Date);\r\n      const item = r.get(key) || Object.assign({}, { country: o['Country/Region'] }, { date: o.Date }, { total: 0 }, { rank: 1 }, { colour: d3.hsl(Math.random() * 360, 0.75, 0.75) });\r\n      item.total += o.Value;\r\n      return r.set(key, item);\r\n    }, new Map()).values()]\r\n\r\n\r\n    let periodSlice = data.filter(d => (+d.date === +period) && (d.total < 5000000))\r\n      .sort((a, b) => b.total - a.total)\r\n      .slice(0, top_n);\r\n\r\n    periodSlice.forEach((d, i) => d.rank = i);\r\n\r\n    let x = d3.scaleLinear()\r\n      .domain([0, d3.max(periodSlice, d => d.total)])\r\n      .range([margin.left, width - margin.right]);\r\n\r\n    let y = d3.scaleLinear()\r\n      .domain([top_n, 0])\r\n      .range([height - margin.bottom, margin.top]);\r\n\r\n    let xAxis = d3.axisTop()\r\n      .scale(x)\r\n      .ticks(width > 500 ? 10 : 5)\r\n      .tickSize(-(height - margin.top - margin.bottom))\r\n      .tickFormat(d => d3.format(',')(d));\r\n\r\n    const subTitle = svg.append(\"text\")\r\n      .attr(\"font-size\", 16)\r\n      .attr(\"x\", margin.left + 10)\r\n      .attr(\"y\", margin.top - 5);\r\n\r\n    subTitle.text(\"Countries\");\r\n\r\n    // const caption = svg.append('text')\r\n    //   .attr(\"font-size\", 16)\r\n    //   .attr('x', width)\r\n    //   .attr('y', height - 5)\r\n    //   .style('text-anchor', 'end');\r\n\r\n    // caption.text('*Source: data.humdata.org');\r\n\r\n    let periodText = svg.append('text')\r\n      .attr('class', 'periodText')\r\n      .attr('x', width - margin.right)\r\n      .attr('y', height - 25)\r\n      .attr(\"font-size\", 35)\r\n      .style('text-anchor', 'end')\r\n      .text(parsedate(period));\r\n\r\n    svg.append('g')\r\n      .attr('transform', `translate(0, ${margin.top})`)\r\n      .style(\"font\", \"16px times\")\r\n      .call(xAxis)\r\n      .selectAll('.tick line')\r\n      .classed('origin', d => d === 0);\r\n\r\n    svg.selectAll('rect.bar')\r\n      .data(periodSlice, d => d.country)\r\n      .enter()\r\n      .append('rect')\r\n      .attr('class', 'bar')\r\n      .attr('x', x(0) + 1)\r\n      .attr('width', d => x(d.total) - x(0))\r\n      .attr('y', d => y(d.rank) + 5)\r\n      .attr('height', y(1) - y(0) - barPadding)\r\n      .style('fill', d => d.colour);\r\n\r\n    svg.selectAll('text.label')\r\n      .data(periodSlice, d => d.country)\r\n      .enter()\r\n      .append('text')\r\n      .attr('class', 'label')\r\n      .attr('x', d => x(d.total) - 8)\r\n      .attr('y', d => y(d.rank) + 5 + ((y(1) - y(0)) / 2) + 1)\r\n      .attr(\"font-size\", 16)\r\n      .style('text-anchor', 'end')\r\n      .text(d => d.country);\r\n\r\n    svg.selectAll('text.valueLabel')\r\n      .data(periodSlice, d => d.country)\r\n      .enter()\r\n      .append('text')\r\n      .attr('class', 'valueLabel')\r\n      .attr('x', d => x(d.total) + 5)\r\n      .attr('y', d => y(d.rank) + 5 + ((y(1) - y(0)) / 2) + 1)\r\n      .attr(\"font-size\", 16)\r\n      .text(d => d3.format(',.0f')(d.total));\r\n\r\n\r\n    let ticker = d3.interval(e => {\r\n\r\n      periodSlice = data.filter(d => (+d.date === +period) && (d.total < 5000000))\r\n        .sort((a, b) => b.total - a.total)\r\n        .slice(0, top_n);\r\n\r\n      periodSlice.forEach((d, i) => d.rank = i);\r\n\r\n      x.domain([0, d3.max(periodSlice, d => d.total)]);\r\n\r\n      svg.select('.xAxis')\r\n        .transition()\r\n        .duration(tickDuration)\r\n        .ease(d3.easeLinear)\r\n        .call(xAxis);\r\n\r\n      let bars = svg.selectAll('.bar').data(periodSlice, d => d.country);\r\n      let labels = svg.selectAll('.label').data(periodSlice, d => d.country);\r\n      let valueLabels = svg.selectAll('.valueLabel').data(periodSlice, d => d.country);\r\n\r\n\r\n      bars\r\n        .enter()\r\n        .append('rect')\r\n        .attr('class', d => `bar ${d.country.replace(/\\s/g, '_')}`)\r\n        .attr('x', x(0) + 1)\r\n        .attr('width', d => x(d.total) - x(0))\r\n        .attr('y', d => y(top_n + 1) + 5)\r\n        .attr('height', y(1) - y(0) - barPadding)\r\n        .style('fill', d => d.colour)\r\n        .transition()\r\n        .duration(tickDuration)\r\n        .ease(d3.easeLinear)\r\n        .attr('y', d => y(d.rank) + 5);\r\n\r\n      bars\r\n        .transition()\r\n        .duration(tickDuration)\r\n        .ease(d3.easeLinear)\r\n        .attr('width', d => x(d.total) - x(0))\r\n        .attr('y', d => y(d.rank) + 5);\r\n\r\n      bars\r\n        .exit()\r\n        .transition()\r\n        .duration(tickDuration)\r\n        .ease(d3.easeLinear)\r\n        .attr('width', d => x(d.total) - x(0))\r\n        .attr('y', d => y(top_n + 1) + 5)\r\n        .remove();\r\n\r\n\r\n      labels\r\n        .enter()\r\n        .append('text')\r\n        .attr('class', 'label')\r\n        .attr('x', d => x(d.total) - 8)\r\n        .attr('y', d => y(top_n + 1) + 5 + ((y(1) - y(0)) / 2))\r\n        .style('text-anchor', 'end')\r\n        .text(d => d.country)\r\n        .transition()\r\n        .duration(tickDuration)\r\n        .ease(d3.easeLinear)\r\n        .attr(\"font-size\", 16)\r\n        .attr('y', d => y(d.rank) + 5 + ((y(1) - y(0)) / 2) + 1);\r\n\r\n\r\n      labels\r\n        .transition()\r\n        .duration(tickDuration)\r\n        .ease(d3.easeLinear)\r\n        .attr('x', d => x(d.total) - 8)\r\n        .attr('y', d => y(d.rank) + 5 + ((y(1) - y(0)) / 2) + 1);\r\n\r\n      labels\r\n        .exit()\r\n        .transition()\r\n        .duration(tickDuration)\r\n        .ease(d3.easeLinear)\r\n        .attr('x', d => x(d.total) - 8)\r\n        .attr('y', d => y(top_n + 1) + 5)\r\n        .remove();\r\n\r\n\r\n      valueLabels\r\n        .enter()\r\n        .append('text')\r\n        .attr('class', 'valueLabel')\r\n        .attr('x', d => x(d.total) + 5)\r\n        .attr('y', d => y(top_n + 1) + 5)\r\n        .text(d => d3.format(',.0f')(d.total))\r\n        .transition()\r\n        .duration(tickDuration)\r\n        .ease(d3.easeLinear)\r\n        .attr(\"font-size\", 16)\r\n        .attr('y', d => y(d.rank) + 5 + ((y(1) - y(0)) / 2) + 1);\r\n\r\n      valueLabels\r\n        .transition()\r\n        .duration(tickDuration)\r\n        .ease(d3.easeLinear)\r\n        .attr('x', d => x(d.total) + 5)\r\n        .attr('y', d => y(d.rank) + 5 + ((y(1) - y(0)) / 2) + 1)\r\n        .tween(\"text\", function (d) {\r\n          let i = d3.interpolateRound(d.total, d.total);\r\n          return function (t) {\r\n            this.textContent = d3.format(',')(i(t));\r\n          };\r\n        });\r\n\r\n      valueLabels\r\n        .exit()\r\n        .transition()\r\n        .duration(tickDuration)\r\n        .ease(d3.easeLinear)\r\n        .attr('x', d => x(d.total) + 5)\r\n        .attr('y', d => y(top_n + 1) + 5)\r\n        .remove();\r\n\r\n      periodText.text(parsedate(period));\r\n\r\n      if (parsedate(period) === yesterday)\r\n        ticker.stop();\r\n      period.setDate(period.getDate() + 1)\r\n    }, tickDuration);\r\n\r\n  }\r\n\r\n  return <svg ref={ref} />\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport * as d3 from 'd3';\r\n\r\nimport Navigation from './Navigation';\r\nimport Copyright from '../Copyright';\r\nimport RaceChart from './RaceChart';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    container: {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingTop: theme.spacing(2),\r\n        paddingBottom: theme.spacing(2),\r\n        paddingRight: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n    },\r\n    fixedHeight: {\r\n        height: 450,\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 115,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },    \r\n}));\r\n\r\n\r\nexport default function RaceCharts(props) {\r\n    const classes = useStyles();\r\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n    const [covid19, setCovid19] = useState([]);\r\n\r\n    const covid19data = (props) => {\r\n        const covid19confirmed = \"time_series_covid19_confirmed_global_narrow.csv\"\r\n        const covid19deaths = \"time_series_covid19_deaths_global_narrow.csv\"\r\n        const covid19recovered = \"time_series_covid19_recovered_global_narrow.csv\"\r\n        const data = Promise.all([\r\n            d3.csv(covid19confirmed, d3.autoType).then(data =>\r\n                data.filter(d => d['Country/Region'] !== \"#country+name\")),\r\n            d3.csv(covid19deaths, d3.autoType).then(data =>\r\n                data.filter(d => d['Country/Region'] !== \"#country+name\")),\r\n            d3.csv(covid19recovered, d3.autoType).then(data =>\r\n                data.filter(d => d['Country/Region'] !== \"#country+name\")),\r\n        ]).then(result => {\r\n            setCovid19([result[0], result[1], result[2]]);\r\n        });\r\n        return data\r\n    }\r\n\r\n    useEffect(() => {\r\n        const parsedate = d3.timeFormat(\"%Y-%m-%d\");\r\n        let yesterday = new Date();\r\n        yesterday = parsedate(yesterday.setDate(yesterday.getDate() - 1));\r\n        covid19data({ yesterday });\r\n    }, []);\r\n\r\n    const valueby = [\"Confirmed\", \"Deaths\", \"Recovered\"];    \r\n    const [value, setValue] = useState(\"\");\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n    };\r\n\r\n    \r\n    return (\r\n        <div className={classes.root}>\r\n            <Navigation />\r\n            <main className={classes.content}>\r\n                <Toolbar />\r\n                <div className={classes.appBarSpacer} />\r\n                <Container maxWidth=\"lg\" className={classes.container}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} md={6} lg={9}>\r\n                            <Grid item xs={12} md={8} lg={12}>\r\n                                <FormControl className={classes.formControl}>\r\n                                    <InputLabel id=\"race-select-label\">Cases</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"race-select-label\"\r\n                                        id=\"race-select\"\r\n                                        value={value}\r\n                                        onChange={handleChange}\r\n                                    >\r\n                                        {valueby.map((row) => {\r\n                                            return (<MenuItem key={row} value={row}>{row}</MenuItem>)\r\n                                        })}\r\n                                    </Select>\r\n                                </FormControl>\r\n                                <FormHelperText>*Source: data.humdata.org</FormHelperText>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={8} lg={12}>\r\n                                <Paper className={fixedHeightPaper}>\r\n                                    <RaceChart covid19={covid19} value={value} />\r\n                                </Paper>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={4} lg={3}>\r\n                            <Paper className={fixedHeightPaper}>\r\n                                \r\n                            </Paper>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Box pt={4}>\r\n                        <Copyright />\r\n                    </Box>\r\n                </Container>\r\n            </main>\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport * as d3 from 'd3';\r\n\r\nimport Navigation from './Navigation';\r\nimport Copyright from '../Copyright';\r\nimport DonutChart from './DonutChart';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    container: {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingTop: theme.spacing(2),\r\n        paddingBottom: theme.spacing(2),\r\n        paddingRight: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n    },\r\n    fixedHeight: {\r\n        height: 400,\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 115,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\n\r\nexport default function DonutCharts(props) {\r\n    const classes = useStyles();\r\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n    const [covid19, setCovid19] = useState([]);\r\n\r\n    const covid19data = (props) => {\r\n        const covid19confirmed = \"time_series_covid19_confirmed_global_narrow.csv\"\r\n        const covid19deaths = \"time_series_covid19_deaths_global_narrow.csv\"\r\n        const covid19recovered = \"time_series_covid19_recovered_global_narrow.csv\"\r\n        const locurl = \"locations.csv\"\r\n        const parsedate = d3.timeFormat(\"%Y-%m-%d\")\r\n        const data = Promise.all([\r\n            d3.csv(covid19confirmed, d3.autoType).then(data =>\r\n                data.filter(d => parsedate(d.Date) === props.yesterday)),\r\n            d3.csv(covid19deaths, d3.autoType).then(data =>\r\n                data.filter(d => parsedate(d.Date) === props.yesterday)),\r\n            d3.csv(covid19recovered, d3.autoType).then(data =>\r\n                data.filter(d => parsedate(d.Date) === props.yesterday)),\r\n            d3.csv(locurl, d3.autoType),\r\n        ]).then(result => {\r\n            setCovid19([result[0], result[1], result[2], result[3]]);\r\n        });\r\n        return data\r\n    }\r\n\r\n    useEffect(() => {\r\n        const parsedate = d3.timeFormat(\"%Y-%m-%d\");\r\n        let yesterday = new Date();\r\n        yesterday = parsedate(yesterday.setDate(yesterday.getDate() - 1));\r\n        covid19data({ yesterday });\r\n    }, []);\r\n\r\n\r\n    const valueby = [\"Confirmed\", \"Deaths\", \"Recovered\"];\r\n    const [value, setValue] = useState(\"\");\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Navigation />\r\n            <main className={classes.content}>\r\n                <Toolbar />\r\n                <div className={classes.appBarSpacer} />\r\n                <Container maxWidth=\"lg\" className={classes.container}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} md={4} lg={6}>\r\n                            <Grid item xs={12} md={8} lg={12}>\r\n                                <FormControl className={classes.formControl}>\r\n                                    <InputLabel id=\"donut-select-label\">Cases</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"donut-select-label\"\r\n                                        id=\"donut-select\"\r\n                                        value={value}\r\n                                        onChange={handleChange}\r\n                                    >\r\n                                        {valueby.map((row) => {\r\n                                            return (<MenuItem key={row} value={row}>{row}</MenuItem>)\r\n                                        })}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={8} lg={12}>\r\n                                <Paper className={fixedHeightPaper}>\r\n                                    <DonutChart covid19={covid19} value={value} />\r\n                                </Paper>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={4} lg={3}>\r\n                            <Grid item xs={12} md={8} lg={12}>\r\n                                <Paper className={fixedHeightPaper}>\r\n                                </Paper>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={4} lg={3}>\r\n                            <Grid item xs={12} md={8} lg={12}>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Box pt={4}>\r\n                        <Copyright />\r\n                    </Box>\r\n                </Container>\r\n            </main>\r\n        </div>\r\n    )\r\n}","import React, { useRef } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\n\r\nexport default function MultiLineChart(props) {\r\n\r\n    const ref = useRef()\r\n    const pdata = props.covid19;\r\n    const margin = { top: 20, right: 20, bottom: 20, left: 70 };\r\n    const width = window.innerWidth;\r\n    const height = window.innerHeight;\r\n\r\n    //const parsedate = d3.timeFormat(\"%m/%d/%y\")\r\n    //const bisectDate = d3.bisector(d => d.date).left;\r\n    //const formatValue = d3.format(',.0f');\r\n\r\n    if (pdata.length > 0) {\r\n\r\n        const temp = pdata[0];\r\n        const dates = Object.keys(temp[0]).slice(4);\r\n        let data = { dates: dates, series: [] };\r\n        temp.forEach((row) => {\r\n            const name = Object.values(row).slice(1, 2);\r\n            const values = Object.values(row).slice(4);\r\n            data.series.push({ name: name, values: values })\r\n        });\r\n\r\n        const x = d3.scaleUtc()\r\n            .domain(d3.extent(data.dates))\r\n            .range([margin.left, width - margin.right]);\r\n\r\n            console.log(x.domain())\r\n        const y = d3.scaleLinear()\r\n            .domain([0, d3.max(data.series, d => d3.max(d.values))]).nice()\r\n            .range([height - margin.bottom, margin.top]);\r\n\r\n        const xAxis = g => g\r\n            .attr(\"transform\", `translate(0,${height - margin.bottom})`)\r\n            .call(d3.axisBottom(x).ticks(width / 80).tickSizeOuter(0));\r\n\r\n        const yAxis = g => g\r\n            .attr(\"transform\", `translate(${margin.left},0)`)\r\n            .call(d3.axisLeft(y))\r\n            .call(g => g.select(\".domain\").remove())\r\n            .call(g => g.select(\".tick:last-of-type text\").clone()\r\n                .attr(\"x\", 3)\r\n                .attr(\"text-anchor\", \"start\")\r\n                .attr(\"font-weight\", \"bold\")\r\n                .text(data.y));\r\n\r\n        const line = d3.line()\r\n            .defined(d => !isNaN(d))\r\n            .x((d, i) => x(data.dates[i]))\r\n            .y(d => y(d));\r\n\r\n        // const svg = d3.select(ref.current)\r\n        //     .attr(\"viewBox\", [0, -10, width + margin.left + margin.right + 10, height + margin.top + margin.bottom]);\r\n\r\n        const svg = d3.select(ref.current)\r\n            .attr(\"viewBox\", [0, 0, width, height])\r\n            .style(\"overflow\", \"visible\");\r\n\r\n        svg.append(\"g\")\r\n            .call(xAxis);\r\n\r\n        svg.append(\"g\")\r\n            .call(yAxis);\r\n\r\n        const path = svg.append(\"g\")\r\n            .attr(\"fill\", \"none\")\r\n            .attr(\"stroke\", \"steelblue\")\r\n            .attr(\"stroke-width\", 1.5)\r\n            .attr(\"stroke-linejoin\", \"round\")\r\n            .attr(\"stroke-linecap\", \"round\")\r\n            .selectAll(\"path\")\r\n            .data(data.series)\r\n            .join(\"path\")\r\n            .style(\"mix-blend-mode\", \"multiply\")\r\n            .attr(\"d\", d => line(d.values));\r\n\r\n        svg.call(hover, path);\r\n\r\n        function hover(svg, path) {\r\n\r\n            if (\"ontouchstart\" in document) svg\r\n                .style(\"-webkit-tap-highlight-color\", \"transparent\")\r\n                .on(\"touchmove\", moved)\r\n                .on(\"touchstart\", entered)\r\n                .on(\"touchend\", left)\r\n            else svg\r\n                .on(\"mousemove\", moved)\r\n                .on(\"mouseenter\", entered)\r\n                .on(\"mouseleave\", left);\r\n\r\n            const dot = svg.append(\"g\")\r\n                .attr(\"display\", \"none\");\r\n\r\n            dot.append(\"circle\")\r\n                .attr(\"r\", 2.5);\r\n\r\n            dot.append(\"text\")\r\n                .attr(\"font-family\", \"sans-serif\")\r\n                .attr(\"font-size\", 10)\r\n                .attr(\"text-anchor\", \"middle\")\r\n                .attr(\"y\", -8);\r\n\r\n            function moved() {\r\n                d3.event.preventDefault();\r\n                const mouse = d3.mouse(this);\r\n                const xm = x.invert(mouse[0]);\r\n                const ym = y.invert(mouse[1]);\r\n                const i1 = d3.bisectLeft(data.dates, xm, 1);\r\n                const i0 = i1 - 1;\r\n                const i = xm - data.dates[i0] > data.dates[i1] - xm ? i1 : i0;\r\n                const s = d3.min(data.series, d => Math.abs(d.values[i] - ym));\r\n                path.attr(\"stroke\", d => d === s ? null : \"#ddd\").filter(d => d === s).raise();\r\n                dot.attr(\"transform\", `translate(${x(data.dates[i])},${y(s.values[i])})`);\r\n                dot.select(\"text\").text(s.name);\r\n            }\r\n\r\n            function entered() {\r\n                path.style(\"mix-blend-mode\", null).attr(\"stroke\", \"#ddd\");\r\n                dot.attr(\"display\", null);\r\n            }\r\n\r\n            function left() {\r\n                path.style(\"mix-blend-mode\", \"multiply\").attr(\"stroke\", null);\r\n                dot.attr(\"display\", \"none\");\r\n            }\r\n        }\r\n    }\r\n\r\n    return <svg ref={ref} />\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\n//import Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport * as d3 from 'd3';\r\n\r\nimport Navigation from './Navigation';\r\nimport Copyright from '../Copyright';\r\nimport MultiLineChart from './MultiLineChart';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    container: {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingTop: theme.spacing(2),\r\n        paddingBottom: theme.spacing(2),\r\n        paddingRight: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n    },\r\n    fixedHeight: {\r\n        height: 400,\r\n    },\r\n}));\r\n\r\n\r\nexport default function MultiLineCharts(props) {\r\n    const classes = useStyles();\r\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n    const [covid19, setCovid19] = useState([])\r\n\r\n    const covid19data = (props) => {\r\n        const covid19confirmed = \"time_series_covid19_confirmed_global.csv\"\r\n        const covid19deaths = \"time_series_covid19_deaths_global.csv\"\r\n        const covid19recovered = \"time_series_covid19_recovered_global.csv\"\r\n        const data = Promise.all([\r\n            d3.csv(covid19confirmed, d3.autoType).then(data =>\r\n                data.filter(d => d['Country/Region'] !== \"#country+name\")),\r\n            d3.csv(covid19deaths, d3.autoType).then(data =>\r\n                data.filter(d => d['Country/Region'] !== \"#country+name\")),\r\n            d3.csv(covid19recovered, d3.autoType).then(data =>\r\n                data.filter(d => d['Country/Region'] !== \"#country+name\")),\r\n        ]).then(result => {\r\n            setCovid19([result[0], result[1], result[2]]);\r\n        });\r\n        return data\r\n    }\r\n\r\n    useEffect(() => {\r\n        const parsedate = d3.timeFormat(\"%Y-%m-%d\")\r\n        let yesterday = new Date();\r\n        yesterday = parsedate(yesterday.setDate(yesterday.getDate() - 1));\r\n        covid19data({ yesterday });\r\n    }, []);\r\n\r\n    // const youtubedata = [\r\n    //     { id: 0, source: \"https://www.youtube.com/embed/9Auq9mYxFEE\", title: \"CNA News\" },\r\n    //     { id: 1, source: \"https://www.youtube.com/embed/w_Ma8oQLmSM\", title: \"ABC News\" },\r\n    //     { id: 2, source: \"https://www.youtube.com/embed/9Auq9mYxFEE\", title: \"Sky News\" },\r\n    //     { id: 3, source: \"https://www.youtube.com/embed/tPeUHECNLKs\", title: \"NBC News\" },\r\n    //     // { id: 4, source: \"https://www.youtube.com/embed/BJzSJlMwQcA\", title: \"Euro News\" },\r\n    // ];\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Navigation />\r\n            <main className={classes.content}>\r\n                <Toolbar />\r\n                <div className={classes.appBarSpacer} />\r\n                <Container maxWidth=\"lg\" className={classes.container}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} md={6} lg={9}>\r\n                            <Grid item xs={12} md={8} lg={12}>\r\n                                <Paper className={fixedHeightPaper}>\r\n                                    <MultiLineChart covid19={covid19} />\r\n                                </Paper>\r\n                            </Grid>\r\n                        </Grid>\r\n                        {/* <Grid item xs={12} md={4} lg={3}>\r\n                            {youtubedata.map((row) => {\r\n                                return (<Grid item key={row.id} xs={12} md={4} lg={12}>\r\n                                    <Typography variant=\"h6\" component=\"h2\">{row.title}</Typography>\r\n                                    <Paper>\r\n                                        <div\r\n                                            className=\"video\"\r\n                                            style={{\r\n                                                position: \"relative\",\r\n                                                paddingBottom: \"56.25%\",\r\n                                                paddingTop: 10,\r\n                                                height: 0\r\n                                            }}\r\n                                        >\r\n                                            <iframe\r\n                                                style={{\r\n                                                    position: \"absolute\",\r\n                                                    width: \"100%\",\r\n                                                    height: \"90%\"\r\n                                                }}\r\n                                                src={row.source}\r\n                                                frameBorder='0'\r\n                                                allow='autoplay; encrypted-media'\r\n                                                allowFullScreen\r\n                                                title={row.title}\r\n                                            />\r\n                                        </div>\r\n                                    </Paper>\r\n                                </Grid>)\r\n                            })}\r\n                        </Grid> */}\r\n                    </Grid>\r\n                    <Box pt={4}>\r\n                        <Copyright />\r\n                    </Box>\r\n                </Container>\r\n            </main>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport { Route, HashRouter as Router } from 'react-router-dom';\n\nimport Dashboard from './components/Dashboard';\nimport PieCharts from './components/PieCharts';\nimport BarCharts from './components/BarCharts';\nimport TableCharts from './components/TableCharts';\nimport LineCharts from './components/LineCharts';\nimport RaceCharts from './components/RaceCharts';\nimport DonutCharts from './components/DonutCharts';\nimport MultiLineCharts from './components/MultiLineCharts';\n\n// const [covid19, setCovid19] = useState([])\n\n// const covid19data = (props) => {\n// const covid19confirmed = \"https://data.humdata.org/hxlproxy/data/download/time_series_covid19_confirmed_global_narrow.csv?dest=data_edit&filter01=merge&merge-url01=https%3A%2F%2Fdocs.google.com%2Fspreadsheets%2Fd%2Fe%2F2PACX-1vTglKQRXpkKSErDiWG6ycqEth32MY0reMuVGhaslImLjfuLU0EUgyyu2e-3vKDArjqGX7dXEBV8FJ4f%2Fpub%3Fgid%3D1326629740%26single%3Dtrue%26output%3Dcsv&merge-keys01=%23country%2Bname&merge-tags01=%23country%2Bcode%2C%23region%2Bmain%2Bcode%2C%23region%2Bsub%2Bcode%2C%23region%2Bintermediate%2Bcode&filter02=merge&merge-url02=https%3A%2F%2Fdocs.google.com%2Fspreadsheets%2Fd%2Fe%2F2PACX-1vTglKQRXpkKSErDiWG6ycqEth32MY0reMuVGhaslImLjfuLU0EUgyyu2e-3vKDArjqGX7dXEBV8FJ4f%2Fpub%3Fgid%3D398158223%26single%3Dtrue%26output%3Dcsv&merge-keys02=%23adm1%2Bname&merge-tags02=%23country%2Bcode%2C%23region%2Bmain%2Bcode%2C%23region%2Bsub%2Bcode%2C%23region%2Bintermediate%2Bcode&merge-replace02=on&merge-overwrite02=on&filter03=explode&explode-header-att03=date&explode-value-att03=value&filter04=rename&rename-oldtag04=%23affected%2Bdate&rename-newtag04=%23date&rename-header04=Date&filter05=rename&rename-oldtag05=%23affected%2Bvalue&rename-newtag05=%23affected%2Binfected%2Bvalue%2Bnum&rename-header05=Value&filter06=clean&clean-date-tags06=%23date&filter07=sort&sort-tags07=%23date&sort-reverse07=on&filter08=sort&sort-tags08=%23country%2Bname%2C%23adm1%2Bname&tagger-match-all=on&tagger-default-tag=%23affected%2Blabel&tagger-01-header=province%2Fstate&tagger-01-tag=%23adm1%2Bname&tagger-02-header=country%2Fregion&tagger-02-tag=%23country%2Bname&tagger-03-header=lat&tagger-03-tag=%23geo%2Blat&tagger-04-header=long&tagger-04-tag=%23geo%2Blon&header-row=1&url=https%3A%2F%2Fraw.githubusercontent.com%2FCSSEGISandData%2FCOVID-19%2Fmaster%2Fcsse_covid_19_data%2Fcsse_covid_19_time_series%2Ftime_series_covid19_confirmed_global.csv\"\n// const covid19deaths = \"https://data.humdata.org/hxlproxy/data/download/time_series_covid19_deaths_global_narrow.csv?dest=data_edit&filter01=merge&merge-url01=https%3A%2F%2Fdocs.google.com%2Fspreadsheets%2Fd%2Fe%2F2PACX-1vTglKQRXpkKSErDiWG6ycqEth32MY0reMuVGhaslImLjfuLU0EUgyyu2e-3vKDArjqGX7dXEBV8FJ4f%2Fpub%3Fgid%3D1326629740%26single%3Dtrue%26output%3Dcsv&merge-keys01=%23country%2Bname&merge-tags01=%23country%2Bcode%2C%23region%2Bmain%2Bcode%2C%23region%2Bsub%2Bcode%2C%23region%2Bintermediate%2Bcode&filter02=merge&merge-url02=https%3A%2F%2Fdocs.google.com%2Fspreadsheets%2Fd%2Fe%2F2PACX-1vTglKQRXpkKSErDiWG6ycqEth32MY0reMuVGhaslImLjfuLU0EUgyyu2e-3vKDArjqGX7dXEBV8FJ4f%2Fpub%3Fgid%3D398158223%26single%3Dtrue%26output%3Dcsv&merge-keys02=%23adm1%2Bname&merge-tags02=%23country%2Bcode%2C%23region%2Bmain%2Bcode%2C%23region%2Bsub%2Bcode%2C%23region%2Bintermediate%2Bcode&merge-replace02=on&merge-overwrite02=on&filter03=explode&explode-header-att03=date&explode-value-att03=value&filter04=rename&rename-oldtag04=%23affected%2Bdate&rename-newtag04=%23date&rename-header04=Date&filter05=rename&rename-oldtag05=%23affected%2Bvalue&rename-newtag05=%23affected%2Binfected%2Bvalue%2Bnum&rename-header05=Value&filter06=clean&clean-date-tags06=%23date&filter07=sort&sort-tags07=%23date&sort-reverse07=on&filter08=sort&sort-tags08=%23country%2Bname%2C%23adm1%2Bname&tagger-match-all=on&tagger-default-tag=%23affected%2Blabel&tagger-01-header=province%2Fstate&tagger-01-tag=%23adm1%2Bname&tagger-02-header=country%2Fregion&tagger-02-tag=%23country%2Bname&tagger-03-header=lat&tagger-03-tag=%23geo%2Blat&tagger-04-header=long&tagger-04-tag=%23geo%2Blon&header-row=1&url=https%3A%2F%2Fraw.githubusercontent.com%2FCSSEGISandData%2FCOVID-19%2Fmaster%2Fcsse_covid_19_data%2Fcsse_covid_19_time_series%2Ftime_series_covid19_deaths_global.csv\"\n// const covid19recovered = \"https://data.humdata.org/hxlproxy/data/download/time_series_covid19_recovered_global_narrow.csv?dest=data_edit&filter01=merge&merge-url01=https%3A%2F%2Fdocs.google.com%2Fspreadsheets%2Fd%2Fe%2F2PACX-1vTglKQRXpkKSErDiWG6ycqEth32MY0reMuVGhaslImLjfuLU0EUgyyu2e-3vKDArjqGX7dXEBV8FJ4f%2Fpub%3Fgid%3D1326629740%26single%3Dtrue%26output%3Dcsv&merge-keys01=%23country%2Bname&merge-tags01=%23country%2Bcode%2C%23region%2Bmain%2Bcode%2C%23region%2Bsub%2Bcode%2C%23region%2Bintermediate%2Bcode&filter02=merge&merge-url02=https%3A%2F%2Fdocs.google.com%2Fspreadsheets%2Fd%2Fe%2F2PACX-1vTglKQRXpkKSErDiWG6ycqEth32MY0reMuVGhaslImLjfuLU0EUgyyu2e-3vKDArjqGX7dXEBV8FJ4f%2Fpub%3Fgid%3D398158223%26single%3Dtrue%26output%3Dcsv&merge-keys02=%23adm1%2Bname&merge-tags02=%23country%2Bcode%2C%23region%2Bmain%2Bcode%2C%23region%2Bsub%2Bcode%2C%23region%2Bintermediate%2Bcode&merge-replace02=on&merge-overwrite02=on&filter03=explode&explode-header-att03=date&explode-value-att03=value&filter04=rename&rename-oldtag04=%23affected%2Bdate&rename-newtag04=%23date&rename-header04=Date&filter05=rename&rename-oldtag05=%23affected%2Bvalue&rename-newtag05=%23affected%2Binfected%2Bvalue%2Bnum&rename-header05=Value&filter06=clean&clean-date-tags06=%23date&filter07=sort&sort-tags07=%23date&sort-reverse07=on&filter08=sort&sort-tags08=%23country%2Bname%2C%23adm1%2Bname&tagger-match-all=on&tagger-default-tag=%23affected%2Blabel&tagger-01-header=province%2Fstate&tagger-01-tag=%23adm1%2Bname&tagger-02-header=country%2Fregion&tagger-02-tag=%23country%2Bname&tagger-03-header=lat&tagger-03-tag=%23geo%2Blat&tagger-04-header=long&tagger-04-tag=%23geo%2Blon&header-row=1&url=https%3A%2F%2Fraw.githubusercontent.com%2FCSSEGISandData%2FCOVID-19%2Fmaster%2Fcsse_covid_19_data%2Fcsse_covid_19_time_series%2Ftime_series_covid19_recovered_global.csv\"\n//   const covidurl = \"https://covid.ourworldindata.org/data/owid-covid-data.csv\"\n//   const locurl = \"https://github.com/owid/covid-19-data/blob/master/public/data/ecdc/locations.csv\"\n//   const mapurl = \"https://cdn.jsdelivr.net/npm/world-atlas@2/countries-50m.json\"\n//   const parsedate = d3.timeFormat(\"%Y-%m-%d\")\n\n//   const data = Promise.all([\n//     d3.csv(covidurl, d3.autoType).then(function (data) {\n//       return data.filter((d) => {\n//         return (parsedate(d.date) === (props.yesterday ? props.yesterday : parsedate(d.date)))\n//           && (d.iso_code !== null)\n//       })\n//     }),\n//     d3.csv(locurl, d3.autoType),\n//     d3.csv(covidurl, d3.autoType).then(function (data) {\n//       return data.filter((d) => (d.iso_code !== null))\n//     }),\n//     d3.json(mapurl),\n//   ]).then((result) => {\n//     const total_countries = result[0].length.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\n//     const total_cases = result[0].reduce((tot, row) => { return tot + row.total_cases }, 0).toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\n//     const total_deaths = result[0].reduce((tot, row) => { return tot + row.total_deaths }, 0).toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\n\n//     setCovid19([result[0], result[1], result[2], result[3], total_countries, total_cases, total_deaths, false]);\n//   })\n\n//   return data\n// }\n\n// useEffect(() => {\n//   const parsedate = d3.timeFormat(\"%Y-%m-%d\")\n//   let yesterday = new Date();\n//   yesterday = parsedate(yesterday.setDate(yesterday.getDate() - 1));\n//   covid19data({ yesterday });\n// }, []);\n\n\nexport default function App() {\n\n    return (\n      <Router>\n        <Route path=\"/\" exact render={(props) => <Dashboard {...props} />} />\n        <Route path=\"/Dashboard\" render={(props) => <Dashboard {...props} />} />\n        <Route path=\"/PieCharts\" render={(props) => <PieCharts {...props} />} />\n        <Route path=\"/BarCharts\" render={(props) => <BarCharts {...props} />} />\n        <Route path=\"/TableCharts\" render={(props) => <TableCharts {...props} />} />\n        <Route path=\"/LineCharts\" render={(props) => <LineCharts {...props} />} />\n        <Route path=\"/RaceCharts\" render={(props) => <RaceCharts {...props} />} />\n        <Route path=\"/DonutCharts\" render={(props) => <DonutCharts {...props} />} />\n        <Route path=\"/MultiLineCharts\" render={(props) => <MultiLineCharts {...props} />} />\n      </Router>\n    )\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}